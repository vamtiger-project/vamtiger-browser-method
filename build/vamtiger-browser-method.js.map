{"version":3,"file":"vamtiger-browser-method.js","sources":["../node_modules/tslib/tslib.js","../source/types.ts","../source/get-meta-element.ts","../source/load-element-query-css.ts","../source/config.ts","../source/get-transpiled-js.ts","../source/is-window.ts","../source/is-worker.ts","../source/is-service-worker.ts","../source/get-service-worker-clients.ts","../source/send-message.ts","../source/send-message-from-service-worker.ts","../source/is-json-script.ts","../source/remove-redundant-scripts.ts","../source/load-script.ts","../source/get-db-params.ts","../source/save-indexed-db-data.ts","../source/get-indexed-db-data.ts","../source/handle-load-script.ts","../source/get-text-mode-css.ts","../source/save-custom-element-name.ts","../source/define-custom-element.ts","../source/pause.ts","../source/load-container-stylesheets.ts","../source/get-element-from-template.ts","../source/get-element-from-url.ts","../source/get-element.ts","../source/queue.ts","../source/dequeue.ts","../source/get-web-component-data.ts","../source/save-web-component-data.ts","../source/load-web-component-data.ts","../source/get-json-ld.ts","../source/save-json.ts","../source/get-json-data.ts","../source/get-json.ts","../source/get-data.ts","../source/get-environment.ts","../source/get-message-data.ts","../source/save-support.ts","../source/get-cache.ts","../source/set-support.ts","../source/ignore-message.ts","../source/load-method.ts","../source/get-method-result.ts","../source/get-message-id.ts","../source/update-method.ts","../source/import-dependencies.ts","../source/remove-dependency-url.ts","../source/handle-message.ts","../source/get-local-host-worker-url.ts","../source/is-local-host.ts","../source/get-worker-url.ts","../source/get-worker.ts","../source/get-intersection-observer.ts","../source/get-page-relative-url.ts","../source/get-service-worker-registration.ts","../source/handle-json-ld.ts","../source/setup-window.ts","../source/is-text-mode.ts","../source/setup-worker.ts","../source/html/index.ts","../source/get-template.ts","../source/get-microdata-caption.ts","../source/get-tab-link.ts","../source/get-json-ld-array.ts","../source/get-email-link.ts","../source/dispatch-event.ts","../source/get-fetch-response.ts","../source/update-request-cache.ts","../source/get-cached-fetch-response.ts","../source/handle-fetch-request.ts","../source/handle-service-worker-activation.ts","../source/setup-service-worker.ts","../source/vamtiger-browser-method.ts","../source/load-scripts.ts","../source/load-scripts-sequentially.ts","../source/load-shadow-stylesheet.ts","../source/load-dependencies.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n","import * as tslib from '../node_modules/tslib/tslib';\nimport { requestIdleCallback } from 'requestidlecallback';\nimport * as lodash from 'lodash';\n\ntslib;\n\nexport enum Environment {\n    window = 'window',\n    worker = 'worker',\n    serviceWorker = 'serviceWorker',\n    unknown = 'unknown'\n}\n\nexport enum CacheName {\n    vamtigerBrowserMethod = 'vamtiger-browser-method'\n}\n\nexport enum EventName {\n    vamtigerBrowserMethodReady = 'vamtigerBrowserMethodReady'\n}\n\nexport enum TimeoutDuration {\n    webComponent = 30000,\n    indexDbIsAccessible = 100\n}\n\nexport enum MessageQueueName {\n    webComponent = 'webComponent'\n}\n\nexport enum Prefix {\n    vamtigerBrowserMethod = 'vamtiger-browser-method',\n    db = 'vamtiger-browser-method',\n    messageIdWindow = 'vamtiger-browser-method-window',\n    messageIdWorker = 'vamtiger-browser-method-worker',\n    messageIdServiceWorker = 'vamtiger-browser-method-service-worker',\n    messageIdUnknownEnvironment = 'vamtiger-browser-method-unknown-environment'\n}\n\nexport enum ElementId {\n    metaElement = 'vamtiger-browser-method'\n}\n\nexport enum Origin {\n    nowhere = '',\n    everyWhere = '*'\n}\n\nexport enum HostName {\n    localHost = 'localhost'\n}\n\nexport enum LocalHostRelativePath {\n    vamtigerBrowserMethod = 'vamtiger-browser-method.js'\n}\n\nexport enum ScriptType {\n    js = 'text/javascript',\n    babel = 'text/babel',\n    json = 'application/json',\n    jsonld = 'application/ld+json'\n}\n\nexport enum ScriptAttribute {\n    type = 'type'\n}\n\nexport enum DataAttribute {\n    vamtigerElementQuery = 'vamtigerLoadElementQueryCss',\n    elementQueryCssLoaded = 'elementQueryCssLoaded',\n    customElementName = 'customElementName',\n    visible = 'visible'\n}\n\nexport enum ErrorMessage {\n    failedToLoadScript = 'Failed to load script',\n    windowPropertyNotSet = 'Window property not set',\n    unsupportedFeature = 'Unsupported feature',\n    customElementAreadyDefined = 'Custom element already defined',\n    noElementName = 'No Element Name',\n    noTemplateUrl = 'No Template URL',\n    noElementSelector = 'No Template Selector',\n    noTemplateForUrl = 'No Template for URL',\n    noTemplate = 'No Template',\n    noElementForSelector = 'No Element for Selector',\n    noJsonLdParameter = 'No \"jsonLd\" property set',\n    scriptLoadedButMethodNameNotFound = 'Failed to load method: Script loaded, but method name not found',\n    crossOriginMethodsNotAllowed = 'Cross-Origin methods are not allowed'\n}\n\nexport enum StringConstant {\n    nothing = '',\n    slash = '/',\n    dash = '-',\n    pipe = '|',\n    comma = ',',\n    backTick = '`',\n    doubleQuote = '\"',\n    commaSpace = ', ',\n    space = ' ',\n    period = '.',\n    newline = '\\n',\n    semiColon = ';'\n}\n\nexport enum TagName {\n    div = 'div',\n    template = 'template'\n}\n\nexport enum LinkRel {\n    stylesheet = 'stylesheet'\n}\n\nexport enum LoadScriptElement {\n    script = 'script',\n    link = 'link',\n    style = 'style'\n}\n\nexport enum Selector {\n    lastStylesheet = 'style:last-of-type',\n    lastMetaElement = 'head > meta:last-of-type',\n    webcomponentsjs = 'script[src*=\"@webcomponents\\/webcomponentsjs\"]',\n    style = 'style',\n    stylesheet = ' link[rel=\"stylesheet\"]',\n    vamtigerBrowserMethodJs = '[src=\"vamtiger-browser-method.js\"]',\n    vamtigerBrowserMethodJsonJs = '[src$=\"vamtiger-browser-method.js.json.js\"]',\n    worker = '[src$=\"js.json.js\"][data-worker]',\n    workderDependency = 'script[data-worker-dependency]',\n    vamtigerBrowserMethodJson = '[data-name$=\"vamtiger-browser-method.js.json\"]',\n    vamtigerBrowserMethod = '[data-name$=\"vamtiger-browser-method.js\"]',\n    script = 'script',\n    jsonScript = 'script[type=\"application/json\"]',\n    jsonLdScript = 'script[type=\"application/ld+json\"]',\n    a = 'a',\n    linkedDataCaption = '[data-linked-data-caption]',\n    linkedDataCaptionElement = '[data-linked-data-caption-element]',\n    jsonLdViewer = 'vamtiger-json-ld-viewer',\n    transpiledJs = '[data-transpiled-js]',\n    htmlTextMode = 'html[data-vamtiger-text-mode]',\n    customElementNameMetaElement = 'meta[data-custom-element-name]',\n    dependencyUrlMetaElement = 'meta[data-dependency]',\n    urlMetaElement = 'meta[data-url]'\n}\n\nexport enum TextModeElementName {\n    vamtigerJsonLdViewer = 'vamtiger-json-ld-viewer'\n}\n\nexport enum  MetaElementName {\n    loadElementQueryCss = 'vamtiger-load-element-query-css'\n}\n\nexport enum WorkerType {\n    all = 'all',\n    worker = 'worker',\n    serviceWorker = 'serviceWorker'\n}\n\nexport enum ScriptNameSuffix {\n    style = 'style',\n    stylesheet = 'stylesheet'\n}\n\nexport enum ScriptName {\n    textMode = 'vamtiger-text-mode'\n}\n\nexport enum MessageAction {\n    ignore = 'ignore',\n    removeRedundantScripts = 'removeRedundantScripts',\n    setWorkerSupport = 'setWorkerSupport',\n    saveWebComponentData = 'saveWebComponentData',\n    getWebComponentData = 'getWebComponentData',\n    dequeue = 'dequeue',\n    loadWebComponentData = 'loadWebComponentData',\n    saveSupport = 'saveSupport',\n    saveCustomElementName = 'saveCustomElementName',\n    getTextModeCss = 'getTextModeCss',\n    loadScript = 'loadScript',\n    loadMethod = 'loadMethod',\n    updateMethod = 'updateMethod',\n    getMethodResult = 'getMethodResult',\n    importDependencies = 'importDependencies',\n    removeDependencyUrl = 'removeDependencyUrl'\n}\n\nexport enum CustomEventName {\n    vamtigerBrowserMethod = 'vamtiger-browser-method'\n}\n\nexport enum HandleJsonLdAction {\n    dequeue = 'vamtiger-browser-method-dequeue'\n}\n\nexport enum DbName {\n    vamtigerBrowserSupport = 'vamtiger-browser-support'\n}\n\nexport enum DbStoreName {\n    support = 'support',\n    webComponent = 'web-component',\n    customElementName = 'custom-element-name'\n}\n\nexport enum DbMode {\n    readonly = 'readonly',\n    readwrite = 'readwrite',\n    versionchange = 'versionchange'\n}\n\nexport enum DbKeyPath {\n    webComponent = 'url',\n    support = 'environment',\n    customElementName = 'name'\n}\n\nexport enum Dependency {\n    lodash = 'https://cdn.jsdelivr.net/npm/lodash@4.17.11',\n    jsonLdViewer = 'https://vamtiger-project.github.io/vamtiger-json-ld-viewer/build/vamtiger-json-ld-viewer.js'\n}\n\nexport interface IDequeue {\n    key: string;\n    match?: boolean;\n    data: IAnyObject;\n    queue: Map<string, Set<IQueueEntry>>;\n}\n\nexport interface IGetDbParams {\n    storeName: DbStoreName;\n    keyPath: DbKeyPath;\n    mode: DbMode;\n}\n\nexport interface IGetDbParamsHandleUpgradeNeeded extends Pick<IDbParams, 'db'>{}\n\nexport interface IDbParams {\n    db: IDBDatabase;\n    transaction: IDBTransaction;\n    store: IDBObjectStore;\n}\n\nexport interface ILoadRemoteScriptParams {\n    src: string;\n}\n\nexport interface IRemoveDepencyUrl {\n    url: string;\n}\n\nexport interface ILoadRemoteStylesheetScriptParams {\n    href: string;\n}\n\nexport interface IIsJsonScript {\n    script: HTMLScriptElement;\n}\n\nexport interface ILoadLocalScriptParams {\n    name: string;\n    removeExisting?: boolean;\n    removeFromDom?: boolean;\n    workerDependency?: boolean;\n}\n\nexport interface ILoadScriptParams {\n    js: string;\n    jsonld?: boolean;\n    jsonLd?: boolean;\n}\n\nexport interface ISaveCustomeElementName {\n    name: string;\n}\n\nexport interface ILoadJsonScriptParams extends ILoadLocalScriptParams {\n    json: string;\n}\n\nexport interface ILoadStylesheetScriptParams {\n    css: string;\n}\n\nexport interface IAnyObject {\n    [key: string]: any;\n}\n\nexport interface IJsonData {\n    jsonLd: IAnyObject[];\n    json?: IAnyObject;\n}\n\nexport interface IJsonJsonLd {\n    index: number;\n    fields: {\n        [key: string]: string[];\n    }\n}\n\nexport interface IImportDependencies {\n    urls?: string[];\n}\n\nexport interface ILoadScript {\n    params: LocalScriptParams\n        | LocalStylesheetScriptParams\n        | ILoadRemoteScriptParams\n        | ILoadRemoteStylesheetScriptParams\n        | ILoadJsonScriptParams;\n    reject: (error: Error) => void\n}\n\nexport interface IUpdateMthod {\n    name: string;\n}\n\nexport interface IGetMethodResult {\n    messageId?: string;\n    name: string;\n    params: IAnyObject;\n}\n\nexport interface IGetMethodResultWindow extends IGetMethodResult {\n    resolve: (result: any) => void;\n    reject: (error: Error) => void;\n}\n\nexport interface IUpdateMthodWrapNamedMethod {\n    method: Function;\n}\n\nexport interface ILoadScriptLoadJsJsonJs {\n    src: string;\n    workerDependency?: boolean;\n}\n\nexport interface ILoadShadowStylesheet {\n    css: string;\n    element: HTMLElement;\n}\n\nexport interface IJsonScriptData {\n    name: string;\n    text: string;\n}\n\nexport interface IDefineCustomElement {\n    name: string;\n    constructor: {\n        new (): HTMLElement\n        prototype: HTMLElement;\n    };\n    ignore?: boolean;\n}\n\nexport interface IPause {\n    milliseconds: number;\n}\n\nexport interface IGetElementBase {\n    name: string;\n    loadStylesheets?: boolean;\n}\n\nexport interface IGetElementTemplate extends IGetElementBase {\n    template: string;\n    selector?: string;\n}\n\nexport interface IGetElementUrl extends IGetElementBase {\n    url: string;\n    selector:  string;\n}\n\nexport interface ILoadElementQueryCss {\n    css: string;\n    stylesheetName?: string;\n    hostName?: string;\n}\n\nexport interface IGetJsonLdArray {\n    jsonLd: IAnyObject;\n}\n\nexport interface IGetJsonLdArrayGetEntry {\n    key: string;\n    value: string | IAnyObject | IAnyObject[];\n}\n\nexport interface IGetMetaElement {\n    selector?: string;\n    properties?: {\n        id?: string;\n    };\n    attributes?: {\n        [key: string]: string;\n    };\n    dataset?: DOMStringMap;\n}\n\nexport interface IDispatchEvent {\n    eventName: EventName;\n    detail?: IAnyObject;\n}\n\nexport interface IGetBabelJs {\n    url?: string;\n    js?: string;\n}\n\nexport interface ILoadContainerStylesheets {\n    name: string;\n    container: HTMLTemplateElement;\n}\n\nexport interface IGetData {\n    json?: string;\n    jsonLd?: string;\n    textMode?: boolean;\n    dependency?: boolean;\n}\n\nexport interface IGetJson {\n    json: string;\n    dependency?: boolean;\n}\n\nexport interface IGetJsonFromUrl {\n    json: string;\n    resolve: (json?: IJsonDataFromUrl) => void;\n    reject: (error: Error) => void\n}\n\nexport interface IGetJsonData {\n    url: string;\n    json?: IJsonDataFromUrl;\n    dependency?: boolean;\n}\n\nexport interface IGetJsonDataWindow extends IGetJsonData {\n    resolve: (data: IJsonDataFromUrl) => void;\n    reject: (error: Error) => void;\n}\n\nexport interface IJsonDataFromUrl {\n    jsonLd: IAnyObject;\n    json: IAnyObject;\n}\n\nexport interface IGetJsonDataWindow extends IGetJsonData {\n    resolve: (json: IJsonDataFromUrl) => void;\n    reject: (error: Error) => void\n}\n\nexport interface IGetDataResolve extends IGetData {\n    data: IJsonData;\n    jsonLd: string;\n    resolve: (data: IJsonData) => void\n}\n\nexport interface IGetJsonLd {\n    jsonLd: string;\n    textMode?: boolean;\n    loadJsonJsonLd?: boolean;\n}\n\nexport interface IViewJsonLd {\n    jsonLd: string;\n}\n\nexport interface IJosnLdImageObject {\n    \"@context\": string;\n    '@type': string;\n    name: string;\n    description: string;\n    author: {\n        '@type': string;\n        givenName: string;\n        familyName: string;\n        email: string;\n    };\n    datePublished: string;\n    contentUrl: string;\n}\n\nexport interface IMessageAction {\n    action: MessageAction;\n    params: IAnyObject & {\n        messageId?: string;\n        ports?: MessagePort[];\n    };\n    workerType?: WorkerType;\n}\n\nexport interface IRemoveRedundantScripts {\n    selector: string;\n}\n\nexport interface IRemoveRedundantScriptsRemoveScripts extends IRemoveRedundantScripts {\n    parent: HTMLElement;\n}\n\nexport interface IRemoveRedundantScriptsRemoveScriptsFromParent extends IRemoveRedundantScriptsRemoveScripts {\n    resolve?: () => void;\n    reject?: (error: Error) => void;\n}\n\nexport interface ISupport {\n    cache: boolean;\n    localStorage: boolean;\n    indexedDb: boolean;\n    indexedDbIsAccessible: boolean;\n    worker: boolean;\n    sharedWorker: boolean;\n    textEncoder: boolean;\n    textDecoder: boolean;\n}\n\nexport interface ILoadMethod {\n    name: string;\n    relativeUrl: string;\n}\n\nexport interface ILoadMethodWindow extends ILoadMethod {\n    resolve: () => void;\n    reject: (error: Error) => void;\n}\n\nexport interface ICustomElementName {\n    name: string;\n}\n\nexport interface ISaveSupport extends ISupport {\n    environment: Environment;\n}\n\nexport interface ISaveWebComponentData extends IWebComponentData {}\n\nexport interface ISaveJsonLd {\n    url: string;\n    data: IJsonDataFromUrl;\n    dependency?: boolean;\n}\n\nexport interface ISaveJsonLdWindow extends ISaveJsonLd {\n    resolve: () => void;\n    reject: (error: Error) => void;\n}\n\nexport interface IGetWebComponentData {\n    key: string;\n}\n\nexport interface IGetDbName {\n    dbName: DbName\n}\n\nexport interface ISaveIndexedDbData {\n    storeName: DbStoreName;\n    keyPath: DbKeyPath;\n    messageId?: string;\n    data: IndexDbData;\n    successAction?: MessageAction\n}\n\nexport interface IGetIndexedDbData {\n    storeName: DbStoreName;\n    keyPath: DbKeyPath;\n    key?: string;\n    messageId?: string;\n}\n\nexport interface ISaveIndexedDbDataHandleSuccess {\n    messageId?: string;\n    key: string;\n    action?: MessageAction;\n    data: IndexDbData;\n}\n\nexport interface IWebComponentData {\n    url: string;\n    created?: number;\n    messageId?: string;\n    jsonLd: IAnyObject | IAnyObject[];\n    json: IAnyObject;\n}\n\nexport interface ISaveWebComponentDataWorker extends ISaveWebComponentData {}\n\nexport interface IQueueEntry {\n    resolve: (result: any) => void;\n    reject: (reason: Error) => void;\n}\n\nexport interface IQueue extends NonNullable<Pick<IQueueEntry, 'resolve' | 'reject'>> {\n    key: string;\n    queue: Map<string, Set<IQueueEntry>>;\n}\n\nexport interface IQueueHandleExpiredQueueEntry {\n    key: string;\n    queue: IQueue['queue'];\n    queueEntry: IQueueEntry;\n}\n\nexport interface ILoadData {\n    url: string;\n    loadJsonJsonLd?: boolean;\n}\n\nexport interface ILoadDataGetFeldData {\n    key: string;\n    urls: string[];\n}\n\nexport interface ILoadDataGetJsonJsonLd extends IJsonJsonLd {}\n\nexport interface IGetMicrodataCaption {\n    imageData: IAnyObject;\n    fieldKey: string;\n}\n\nexport interface IGetTemplate {\n    selector: Selector;\n    attributes?: IAttributes;\n    properties?: IProperties;\n}\n\nexport interface IProperties {\n    name?: string;\n    src?: string;\n    alt?: string;\n    innerHTML?: string;\n}\n\nexport interface IGetTabLink {\n    href: string;\n    text: string;\n}\n\nexport interface IGetEmailLink {\n    href: string;\n    text: string;\n}\n\nexport interface IVamtigerBrowserMethodLoadMethod {\n    [key: string]: Function;\n}\n\nexport interface ISetDependencyUrl {\n    script: HTMLScriptElement\n}\n\nexport interface ISetDependencyUrlWindow {\n    js: string;\n}\n\nexport interface IHandleJsonLd extends CustomEvent {\n    detail: IHandleJsonLdDetail;\n}\n\nexport interface IHandleJsonLdDetail {\n    action: HandleJsonLdAction;\n    params: IJsonDataFromUrl;\n}\n\nexport type WebComponentDataResolve = (webComponent: IJsonData | undefined) => void;\n\nexport type ErrorResolve = (error: Error) => void;\n\nexport type MessageResponse = IMessageAction | undefined | null | false;\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type LocalScriptParams = ILoadLocalScriptParams & ILoadScriptParams;\n\nexport type LocalStylesheetScriptParams = ILoadLocalScriptParams & ILoadStylesheetScriptParams;\n\nexport type LoadScriptParams = LocalScriptParams\n    | LocalStylesheetScriptParams\n    | ILoadRemoteScriptParams\n    | ILoadRemoteStylesheetScriptParams;\n\nexport type LoadScriptsParams = LoadScriptParams[];\n\nexport type LoadScriptsSequentiallyParams = LoadScriptsParams[];\n\nexport type DependencyKey = keyof typeof Dependency;\n\nexport type LoadedScript<P extends ILoadScript['params']> =\n    P extends ILoadScriptParams ? HTMLScriptElement :\n    P extends ILoadStylesheetScriptParams ? HTMLStyleElement :\n    P extends ILoadRemoteScriptParams ? HTMLScriptElement :\n    P extends ILoadRemoteStylesheetScriptParams ? HTMLLinkElement :\n    never;\n\nexport type LoadedScripts<P extends LoadScriptsParams> =\n    P extends ILoadScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[] ? HTMLLinkElement[] :\n    never;\n\nexport type LoadedScriptsSequentially<P extends LoadScriptsSequentiallyParams> =\n    P extends ILoadScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[][] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[][] ? HTMLLinkElement[] :\n    never;\n\nexport type GetElementParams = IGetElementTemplate | IGetElementUrl;\n\nexport type VamtigerBrowserMethod = {\n    origin?: string;\n    metaElement?: HTMLMetaElement;\n    loadScript: <P extends LocalScriptParams | LocalStylesheetScriptParams | ILoadRemoteScriptParams | ILoadRemoteStylesheetScriptParams>(params: P) => Promise<LoadedScript<P>>;\n    loadScripts: <P extends LoadScriptParams[]>(params: P) => Promise<LoadedScripts<P>>;\n    loadScriptsSequentially: <P extends LoadScriptParams[][]>(params: P) => Promise<LoadedScriptsSequentially<P>>;\n    loadMethod: (params: ILoadMethod) => Promise<boolean>;\n    loadShadowStylesheet: ({ css, element }: ILoadShadowStylesheet) => void;\n    defineCustomElement: ({ name, constructor, ignore }: IDefineCustomElement) => void;\n    pause: ({ milliseconds }: IPause) => Promise<unknown>;\n    getElement: <P extends GetElementParams>(params: P) => Promise<HTMLElement>;\n    getData: <P extends IGetData>(params: P) => Promise<GetDataResult<P>>;\n    getEnvironment: () => Environment;\n    environment: Environment;\n    getMicrodataCaption: (params: IGetMicrodataCaption) => HTMLElement | null | undefined;\n    queue: Map<string, Set<IQueueEntry>>;\n    messageQueue: Map<string, Set<IQueueEntry>>;\n    worker?: Worker;\n    serviceWorker?: ServiceWorker;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n    support?: ISupport;\n    workerSupport?: ISupport;\n    serviceWorkerSupport?: ISupport;\n    getJsonLdArray: ({ jsonLd }: IGetJsonLdArray) => Promise<string[][]>;\n    textMode?: boolean;\n    intersectionObserver?: IntersectionObserver;\n    messageChannel?: MessageChannel;\n    method: IVamtigerBrowserMethodLoadMethod;\n};\n\nexport interface IAttributes {\n    id?: string;\n    for?: string;\n    slot?: string;\n    'data-image-figure'?: string;\n    'data-json-ld'?: string;\n    itemprop?: string;\n}\n\nexport interface IGetServiceWorkerClients {\n    type: ClientTypes;\n}\n\nexport interface ISendMessageFromServiceWorker {\n    message: string | Uint8Array;\n    clients?: ServiceWorkerClient;\n}\n\nexport interface FetchEvent extends Event {\n\trequest: Request;\n\trespondWith(response: Promise<Response>|Response): Promise<Response>;\n}\n\nexport interface IUpdateRequestCache {\n    request: Request;\n}\n\nexport type JsonLdActionParams<A extends HandleJsonLdAction> =\n    A extends HandleJsonLdAction.dequeue ? IDequeue :\n    unknown;\n\nexport type JsonLdActionMethod<A extends HandleJsonLdAction> =\n    A extends HandleJsonLdAction.dequeue ? (params: IDequeue) => void :\n    unknown;\n\nexport type ServiceWorkerClient = 'window' | 'worker' | 'sharedworker' | 'all';\n\nexport type JsonDataResolve = (data: IJsonData) => void;\n\nexport type WorkerPostMessage = (message: string | Uint8Array) => void;\n\nexport type IndexDbData = IWebComponentData | ISupport | ICustomElementName;\n\nexport type GetIndexedDbData<P extends IGetIndexedDbData> =\n    P['keyPath'] extends DbKeyPath.webComponent ? IWebComponentData | undefined :\n    P['keyPath'] extends DbKeyPath.support ? ISaveSupport :\n    P['keyPath'] extends DbKeyPath.customElementName ? ICustomElementName[] :\n    never;\n\nexport type GetDataResult<P extends IGetData> =\n    P['json'] extends string ? IJsonDataFromUrl :\n    P['jsonLd'] extends string ? IJsonData :\n    unknown;\n\nexport type DbKeyPathName = keyof typeof DbKeyPath;\n\nexport type DbStoreNameKey = keyof typeof DbStoreName;\n\nexport type AttributesKey = keyof IAttributes;\n\nexport type GetTemplate<P extends IGetTemplate> =\n    P['selector'] extends Selector.a ? HTMLAnchorElement :\n    P['selector'] extends  Selector.linkedDataCaptionElement ? HTMLSpanElement :\n    P['selector'] extends Selector.linkedDataCaption ? HTMLElement :\n    null;\n\ndeclare global {\n    interface Window extends TsLib {\n        VamtigerBrowserMethod: VamtigerBrowserMethod;\n        Babel: any;\n        EQCSS: IAnyObject;\n        requestIdleCallback?: typeof requestIdleCallback;\n        _: typeof lodash;\n        IntersectionObserver: typeof IntersectionObserver;\n        importScripts?: (url: string) => void;\n        'vamtiger-browser-method': HTMLMetaElement;\n    }\n\n    namespace NodeJS {\n        interface  Global {\n            VamtigerBrowserMethod: Window['VamtigerBrowserMethod'];\n        }\n    }\n}\n\nexport const regex = {\n    showRootHost: /:{1,2}host/gm,\n    dash: new RegExp(StringConstant.dash, 'g'),\n    space: /\\s/g,\n    nonWord: /\\W+/g,\n    backTicks: /`/gm,\n    remoteUrl: /^http(s)?/i,\n    jsJsonJs: /\\.js\\.json\\.js$/,\n    jsonJs: /\\.json\\.js$/,\n    trailingJs: /\\.js$/,\n    uppercase: /[A-Z]/,\n    leadingAt: /^@/,\n    email: /^email$/i,\n    trailingHtml: /\\.html$/i,\n    textModeElement: new RegExp(\n        (Object.keys(TextModeElementName) as (keyof typeof TextModeElementName)[])\n            .map(key => TextModeElementName[key])\n            .join(StringConstant.pipe),\n        'i'\n    )\n}\n\nexport const selector = {\n    redundantScripts: [\n        Selector.vamtigerBrowserMethodJsonJs,\n        Selector.vamtigerBrowserMethodJson,\n        Selector.vamtigerBrowserMethod,\n        Selector.transpiledJs,\n        ...(Object.keys(Dependency) as DependencyKey[]).map(key => `[src=\"${Dependency[key]}\"]`)\n    ].join(StringConstant.comma)\n}\n\nexport const sendMessageFromWorker = getPostMessage();\n\nexport const ignore = () => {};\n\nfunction getPostMessage() {\n    try {\n        return postMessage as WorkerPostMessage;\n    } catch(error) {}\n}\n","import {\n    IGetMetaElement,\n    StringConstant,\n    Selector\n} from './types';\n\nconst { nothing } = StringConstant;\n\nexport default function ({ selector = nothing, properties = {}, dataset = {}, attributes = {}}: IGetMetaElement) {\n    const { id } = properties;\n    const { head } = document;\n    const lastMetaElement = head.querySelector<HTMLMetaElement>(Selector.lastMetaElement);\n    const attributeKeys = Object.keys(attributes);\n    const existingMetaElement = id && ((window as any)[id]\n        || selector && head.querySelector(selector)) as HTMLMetaElement;\n    const newMetaElment = !existingMetaElement && document.createElement('meta');\n    const metaElement = (existingMetaElement || newMetaElment) as HTMLMetaElement;\n\n    let dataKey: string;\n\n    if (newMetaElment) {\n        Object.assign(newMetaElment, properties);\n        Object.assign(newMetaElment.dataset, dataset);\n\n        if (lastMetaElement && lastMetaElement.nextElementSibling) {\n            head.insertBefore(\n                newMetaElment,\n                lastMetaElement.nextElementSibling\n            );\n        } else {\n            head.appendChild(newMetaElment);\n        }\n    }\n\n    attributeKeys.forEach(key => !metaElement.hasAttribute(key) && metaElement.setAttribute(dataKey, attributes[key]));\n\n    return metaElement;\n}","import {\n    ILoadElementQueryCss,\n    MetaElementName,\n    StringConstant,\n    regex\n} from './types';\nimport getMetaElment from './get-meta-element';\n\nconst { requestIdleCallback } = self;\nconst { showRootHost } = regex;\nconst { nothing } = StringConstant;\n\nexport default function(params: ILoadElementQueryCss) {return new Promise(async (resolve, reject) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => loadElementQueryCss(params).then(resolve).catch(reject));\n    } else {\n        setTimeout(() => loadElementQueryCss(params).then(resolve).catch(reject), 0);\n    }\n})}\n\nasync function loadElementQueryCss({ css, stylesheetName: currentStylesheetName = nothing, hostName = nothing }: ILoadElementQueryCss) {\n    const { _ } = self;\n    const { camelCase } = _;\n    const metaElement = getMetaElment({\n        properties: {\n            id: MetaElementName.loadElementQueryCss\n        }\n    });\n    const stylesheetName = camelCase(currentStylesheetName);\n    const { dataset } = metaElement;\n    const elementQueryCss = !dataset.hasOwnProperty(hostName) && (hostName && css.replace(showRootHost, hostName)) || css;\n    const { EQCSS } = self;\n\n    if (elementQueryCss && EQCSS) {\n        EQCSS.register(EQCSS.parse(elementQueryCss));\n\n        if (stylesheetName) {\n            dataset[stylesheetName] = nothing;\n        } else if (hostName) {\n            dataset[hostName] = nothing;\n        }\n    }\n\n    return true;\n}","import {\n    Dependency\n} from './types';\n\nexport const babel = {\n    presets: ['es2015']\n};\n\nexport const jsonLdEntryValueType = new Set([\n    typeof 1,\n    typeof '',\n    typeof true\n]);\n\nexport const dependencyPaths = Array.from(new Set([\n    'lodash/lodash.min.js'\n]));\n\nexport const getDependencies = () => [\n    !self._ && Dependency.lodash || ''\n].filter(dependency => dependency);\n\nexport const intersectionObserverThreshold = getIntersectionObserverThreshold(5);\n\nexport const intersectionObserver = {\n    root: null,\n    rootMargin: '0px',\n    threshold: intersectionObserverThreshold\n};\n\nexport const serviceWorker = {\n    scope: '/'\n};\n\nexport const serviceWorkerClients = {\n    includeUncontrolled: true\n}\n\nfunction getIntersectionObserverThreshold(length: number) {\n    const step = 1 / length;\n    const threshold = Array(length)\n        .fill(undefined)\n        .map((value, index) => index ? (index + 1) * step : index);\n\n    return threshold;\n}\n\nexport const workerDependencies = [\n    Dependency.lodash\n]","import {\n    IGetBabelJs,\n    IAnyObject,\n    ScriptType,\n    ScriptAttribute,\n    StringConstant\n} from './types';\nimport { babel } from './config';\n\nconst { nothing } = StringConstant;\n\nexport default async function ({ url, js }: IGetBabelJs) {\n    const { fetch, Babel } = self;\n    const { transform } = Babel || { transform: undefined }\n    const code = transform && (js || url && await fetch(url)\n        .then(response => response && response.text())\n        .catch(handleError));\n    const { code: transpiledCode } = code && code.trim() && transform && transform(code, babel) || { code: '' };\n    const transpiledJs: string = transpiledCode || js;\n\n    return transpiledJs;\n}\n\nfunction handleError(error: Error) {\n    const transpiledJs = '';\n\n    console.warn(error.message);\n    console.warn(error.stack);\n\n    return transpiledJs;\n}","export default function () {\n    try {\n        return self instanceof Window;\n    } catch(error) {\n        return false;\n    }\n}","declare const DedicatedWorkerGlobalScope: any;\n\nexport default function () {\n    try {\n        return self instanceof DedicatedWorkerGlobalScope;\n    } catch(error) {\n        return false;\n    }\n}","declare const ServiceWorkerGlobalScope: any;\n\nexport default function () {\n    try {\n        return self instanceof ServiceWorkerGlobalScope;\n    } catch(error) {\n        return false;\n    }\n}","import {\n    IAnyObject,\n    IGetServiceWorkerClients\n} from './types';\nimport {\n    serviceWorkerClients as baseConfig\n} from './config';\nimport isServiceWorker from './is-service-worker';\n\ndeclare const self: IAnyObject;\n\nexport default async function (params: IGetServiceWorkerClients) {\n    const clients: IAnyObject[] = isServiceWorker() && await getClients(params) || [];\n\n    return clients;\n}\n\nfunction getClients({type}: IGetServiceWorkerClients) {\n    const config = {\n        ...baseConfig,\n        type\n    };\n    const clients = self && self.clients && self.clients.matchAll && self.clients.matchAll(config);\n\n    return clients;\n}","import {\n    IMessageAction,\n    ISupport,\n    sendMessageFromWorker,\n    WorkerType\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport isServiceWorker from './is-service-worker';\nimport sendMessageFromServiceWorker from './send-message-from-service-worker';\n\nconst { stringify } = JSON;\nconst textEncoder = new TextEncoder();\n\nexport default function (params: IMessageAction) {\n    const { serviceWorker } = navigator;\n    const { workerType = WorkerType.worker } = params;\n    const { VamtigerBrowserMethod } = self;\n    const { worker, support } = VamtigerBrowserMethod;\n    const { textEncoder: textEncoderSupport } = support || {} as ISupport;\n    const stringMessage = stringify(params);\n    const message = textEncoderSupport && textEncoder.encode(stringMessage)\n        || stringMessage;\n\n    if (isWindow()) {\n        if(workerType === WorkerType.all) {\n            worker && worker.postMessage(message);\n            serviceWorker && serviceWorker.controller && serviceWorker.controller.postMessage(message);\n        } else if (workerType === WorkerType.worker) {\n            worker && worker.postMessage(message);\n        } else if (workerType === WorkerType.serviceWorker) {\n            serviceWorker && serviceWorker.controller && serviceWorker.controller.postMessage(message);\n        }\n    } else if (isWorker()) {\n        sendMessageFromWorker && sendMessageFromWorker(message);\n    } else if (isServiceWorker()) {\n        sendMessageFromServiceWorker({message});\n    }\n}","import {\n    ISendMessageFromServiceWorker\n} from './types';\nimport getServiceWorkerClients from './get-service-worker-clients';\n\nexport default async function ({clients: type = 'window', message}: ISendMessageFromServiceWorker) {\n    const clients = await getServiceWorkerClients({type});\n\n    Promise.all(clients.map((client) => client.postMessage(message)));\n}","import {\n    IIsJsonScript\n} from './types';\n\nconst { parse } = JSON;\n\nexport default function ({ script }: IIsJsonScript) {\n    const { innerHTML } = script;\n\n    let isJson = false;\n\n    try {\n        parse(innerHTML);\n        isJson = true;\n    } catch(error) {\n        console.warn(error);\n        isJson = false;\n    }\n\n    return isJson;\n}","import {\n    MessageAction,\n    IRemoveRedundantScripts,\n    IRemoveRedundantScriptsRemoveScripts,\n    IRemoveRedundantScriptsRemoveScriptsFromParent,\n    StringConstant,\n    ScriptType,\n    Prefix\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport sendMessage from './send-message';\nimport isJsonScript from './is-json-script';\n\nconst { requestIdleCallback } = self;\nconst { dash } = StringConstant;\nconst { vamtigerBrowserMethod: prefix } = Prefix;\n\nexport default async function (params: IRemoveRedundantScripts) {\n    isWindow() && await removeRedundantScripts(params);\n\n    isWorker() && sendRemoveRedundantScriptsMessage(params);\n}\n\nasync function removeRedundantScripts(params: IRemoveRedundantScripts) {\n    const { head: parent } = document;\n\n    await removeScripts({...params, parent});\n}\n\nexport function removeScripts(params: IRemoveRedundantScriptsRemoveScripts) {return new Promise((resolve, reject) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => removeScriptsFromParent({...params, resolve, reject }));\n    } else {\n        setTimeout(() => removeScriptsFromParent({...params, resolve, reject }), 0);\n    }\n})}\n\nexport function removeDuplicateScripts(params: IRemoveRedundantScriptsRemoveScripts) {return new Promise((resolve, reject) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => removeDuplicateScriptsFromParent({...params, resolve, reject }));\n    } else {\n        setTimeout(() => removeDuplicateScriptsFromParent({...params, resolve, reject }), 0);\n    }\n})}\n\nfunction removeDuplicateScriptsFromParent({resolve, reject, selector, parent}: IRemoveRedundantScriptsRemoveScriptsFromParent) {\n    const duplicateScripts = Array.from(parent.querySelectorAll<HTMLScriptElement>(selector));\n\n    duplicateScripts.pop();\n\n    duplicateScripts.forEach(duplicateScript => parent.removeChild(duplicateScript));\n\n    resolve && resolve();\n}\n\nfunction removeScriptsFromParent({ selector, parent, resolve, reject }: IRemoveRedundantScriptsRemoveScriptsFromParent) {\n    const { head } = document;\n    const scripts = Array.from(parent.querySelectorAll<HTMLScriptElement>(selector));\n    const jsScripts = scripts.filter(({type, src}) => src || !type || type === ScriptType.js);\n    const jsonScripts = scripts\n        .filter(({ type }) => type === ScriptType.json)\n        .filter(script => isJsonScript({ script }));\n    const jsonLdScripts = scripts\n        .filter(({ type }) => type === ScriptType.jsonld)\n        .filter(script => isJsonScript({ script }));\n    const safeScripts = jsonLdScripts.concat(jsonScripts);\n    const time = new Date().getTime();\n    const jsonScriptName = jsonScripts.length && [\n        prefix,\n        ScriptType.json,\n        time\n    ].join(dash);\n    const jsonScriptSelector = jsonScriptName && `script[type=\"${ScriptType.json}\"][data-name=\"${jsonScriptName}\"]`;\n    const jsonLdScriptName = jsonLdScripts.length && [\n        prefix,\n        ScriptType.jsonld,\n        time\n    ].join(dash);\n    const jsonLdScriptSelector = jsonLdScriptName && `script[type=\"${ScriptType.jsonld}\"][data-name=\"${jsonLdScriptName}\"]`;\n\n    jsScripts.length && jsonScriptName && jsScripts.forEach(({ dataset }) => dataset.name = jsonScriptName || '');\n\n    jsonLdScripts.length && jsonLdScriptName && jsonLdScriptSelector && jsonLdScripts.forEach(({ dataset }) => dataset.name = jsonLdScriptName || '');\n\n    if (jsonScriptSelector && parent !== head) {\n        parent.dataset.json = jsonScriptSelector;\n    }\n\n    if (jsonLdScriptSelector && parent !== head) {\n        parent.dataset.jsonLd = jsonLdScriptSelector;\n    }\n\n    if (scripts.length) {\n        parent.dataset.removedScripts = (Number(parent.dataset.removedScripts || 0) + scripts.length).toString();\n    }\n\n    safeScripts.forEach(script => head.appendChild(script));\n\n    scripts.forEach(script => parent.removeChild(script));\n\n    resolve && resolve();\n}\n\nexport function sendRemoveRedundantScriptsMessage({ selector }: IRemoveRedundantScripts) {\n    const massage = {\n        action: MessageAction.removeRedundantScripts,\n        params: {\n            selector\n        }\n    };\n\n    sendMessage(massage);\n}","import {\n    ILoadScript,\n    ILoadScriptLoadJsJsonJs,\n    ErrorMessage,\n    LocalScriptParams,\n    LocalStylesheetScriptParams,\n    ILoadRemoteStylesheetScriptParams,\n    ILoadRemoteScriptParams,\n    ILoadJsonScriptParams,\n    LoadScriptElement,\n    LoadedScript,\n    LinkRel,\n    ScriptAttribute,\n    ScriptType,\n    StringConstant,\n    regex,\n    Selector\n} from './types';\nimport loadElementQueryCss from './load-element-query-css';\nimport getTranspiledJs from './get-transpiled-js';\nimport removeRedundantScripts from './remove-redundant-scripts';\n\nconst { parse } = JSON;\nconst { failedToLoadScript } = ErrorMessage;\nconst { stylesheet } = LinkRel;\nconst { script: scriptElement, link, style } = LoadScriptElement;\nconst { remoteUrl, jsJsonJs, jsonJs, trailingJs } = regex;\nconst { nothing, slash } = StringConstant;\n\nexport default function<P extends ILoadScript['params']>(params: P) {\n    return loadScript(params);\n}\n\nfunction loadScript<P extends ILoadScript['params']>(params: P) {return new Promise(async (resolve: (script: LoadedScript<P>) => void, reject: ILoadScript['reject']) => {\n    const { head, body } = document;\n    const {\n        js,\n        name: scriptName,\n        jsonld,\n        removeFromDom,\n        workerDependency = false\n    } = params as LocalScriptParams;\n    const { src } = params as ILoadRemoteScriptParams;\n    const transpiledJs = (js || src && !src.match(remoteUrl)) && await getTranspiledJs({ js, url: src}) || '';\n    const { css, name: stylesheetName } = params as LocalStylesheetScriptParams;\n    const { href } = params as ILoadRemoteStylesheetScriptParams;\n    const { json } = params as ILoadJsonScriptParams;\n    const remoteScript = params.hasOwnProperty('src') || params.hasOwnProperty('href');\n    const element = (js || json || src) && scriptElement\n        || css && style\n        || href && link;\n    const selector = src && `script[src=\"${src}\"]`\n        || href && `link[href=\"${href}\"]`\n        || js && scriptName && `script[data-name=\"${scriptName}\"]`\n        || jsonld && scriptName && `script[data-name=\"${scriptName}\"][type=\"${ScriptType.jsonld}\"]`\n        || css && stylesheetName && `style[data-name=\"${stylesheetName}\"]`;\n    const existingScript = (head.querySelector(selector) || body.querySelector(selector)) as LoadedScript<P>;\n    const script = selector\n        && element\n        && document.createElement(element) as LoadedScript<P>;\n\n    if (script instanceof HTMLScriptElement) {\n        if (!transpiledJs && src) {\n            script.src = src;\n        } else if (json || transpiledJs || js) {\n            script.innerHTML = json || transpiledJs || js;\n            script.dataset.name = scriptName || src;\n\n            if (jsonld) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.jsonld);\n\n                script.dataset.jsonLd = script.dataset.name;\n            } else if (json) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.json);\n            } else if (transpiledJs) {\n                script.dataset.transpiledJs = nothing;\n            }\n        }\n    } else if (script instanceof HTMLLinkElement) {\n        script.rel = stylesheet;\n        script.href = href;\n    } else if (script instanceof HTMLStyleElement) {\n        script.innerHTML = css;\n        script.dataset.name = stylesheetName;\n\n        await loadElementQueryCss({\n            css,\n            stylesheetName\n        });\n    }\n\n    if (existingScript) {\n        resolve(existingScript);\n    } else if (script) {\n        head.appendChild(script);\n\n        if (remoteScript) {\n            script.addEventListener('load', handleLoad);\n            script.addEventListener('error', handleLoadError);\n        }\n\n        if (workerDependency) {\n            script.dataset.workerDependency = nothing;\n        }\n\n        if (transpiledJs || !remoteScript) {\n            handleLoad();\n        }\n    }\n\n    async function handleLoad() {\n        if (script) {\n            removeEventListeners();\n\n            if (removeFromDom) {\n                head.removeChild(script);\n            }\n\n            if(src && src.match(jsJsonJs)){\n                await loadJsJsonJs({ src, workerDependency });\n            }\n\n            resolve(script);\n        }\n    }\n\n    function handleLoadError(event: Event) {\n        removeEventListeners();\n\n        console.error(event);\n\n        reject(new Error(`${failedToLoadScript}`));\n    }\n\n    function removeEventListeners() {\n        if (script) {\n            script.removeEventListener('load', handleLoad);\n            script.removeEventListener('error', handleLoadError);\n        }\n    }\n})};\n\nasync function loadJsJsonJs({ src, workerDependency }: ILoadScriptLoadJsJsonJs) {\n    const { head } = document;\n    const paths = src\n        .replace(trailingJs, nothing)\n        .split(slash);\n    const scriptName = paths[paths.length - 1];\n    const selector = src && scriptName && `script[type=\"${ScriptType.json}\"][data-name=\"${scriptName}\"]`;\n    const jsJsonJsScript = selector && head.querySelector<HTMLScriptElement>(selector);\n    const json = jsJsonJsScript && jsJsonJsScript.innerHTML && parse(jsJsonJsScript.innerHTML);\n    const js: string = json && json.text;\n    const name = src.replace(jsonJs, nothing);\n    const removeScriptSelector = [\n        `script[src=\"${src}\"]`,\n        selector,\n        Selector.transpiledJs\n    ].join(StringConstant.comma);\n\n    if (name && js) {\n        await loadScript({ name, js, workerDependency }).catch(handleError);\n\n        await removeRedundantScripts({selector: removeScriptSelector});\n    }\n}\n\nfunction handleError(error: Error) {\n    console.warn(error.name);\n    console.warn(error.message);\n    console.warn(error.stack);\n}","import {\n    IGetDbParams,\n    IGetDbParamsHandleUpgradeNeeded,\n    IDbParams,\n    DbName,\n    DbStoreName,\n    DbStoreNameKey,\n    DbKeyPathName,\n    DbKeyPath\n} from './types';\n\nconst { vamtigerBrowserSupport: dbName } = DbName;\n\nexport default async function (params: IGetDbParams) {\n    const { storeName, keyPath, mode } = params;\n    const db = await getDb();\n    const transaction = db && db.transaction && db.transaction(storeName, mode);\n    const store = transaction && transaction.objectStore && transaction.objectStore(storeName);\n    const dbParams: IDbParams = {\n        db,\n        transaction,\n        store\n    };\n\n    return dbParams;\n}\n\nexport function getDb() {return new Promise((resolve: (db: IDBDatabase) => void, reject) => {\n    const dbRequest = indexedDB.open(dbName, 1);\n\n    dbRequest.addEventListener('error', reject);\n\n    dbRequest.addEventListener('upgradeneeded', () => handleUpgradeNeeded({ db: dbRequest.result }));\n\n    dbRequest.addEventListener('success', () => resolve(dbRequest.result));\n})}\n\nfunction handleUpgradeNeeded({ db }: IGetDbParamsHandleUpgradeNeeded) {\n    const storeNames = Object.keys(DbKeyPath);\n\n    storeNames.forEach(storeName => !db.objectStoreNames.contains(storeName) && db.createObjectStore(DbStoreName[storeName as DbStoreNameKey], {\n        keyPath: DbKeyPath[storeName as DbKeyPathName]\n    }));\n}","import {\n    ISaveIndexedDbData,\n    ISaveIndexedDbDataHandleSuccess,\n    DbMode,\n    MessageAction\n} from './types';\nimport getDbParams from './get-db-params';\nimport sendMessage from './send-message';\n\nconst { readwrite: mode } = DbMode;\n\nexport default async function ({ storeName, keyPath, data, messageId, successAction: action }: ISaveIndexedDbData) {\n    const { store } = await getDbParams({\n        storeName,\n        keyPath,\n        mode\n    });\n    const save = store.put(data);\n\n    save.addEventListener('error', handleError);\n    save.addEventListener('success', () => handleSuccess({ messageId, key: keyPath, action, data }));\n}\n\nfunction handleSuccess(params: ISaveIndexedDbDataHandleSuccess) {\n    const {\n        action,\n        data\n    } = params;\n    const message = action && {\n        action,\n        params: {\n            ...params,\n            ...data\n        }\n    };\n\n    message && sendMessage(message);\n}\n\nfunction handleError(error: Event) {\n    console.error(error);\n    throw error;\n}","import {\n    IGetIndexedDbData,\n    GetIndexedDbData,\n    DbMode\n} from './types';\nimport getDbParams from './get-db-params';\n\nconst { readonly: mode } = DbMode;\n\nexport default async function <P extends IGetIndexedDbData>({ storeName, keyPath, key }: P): Promise<GetIndexedDbData<P>> {return new Promise(async (resolve, reject) => {\n    const { store } = await getDbParams({\n        storeName,\n        keyPath,\n        mode\n    });\n    const get = key && store.get(key) || store.getAll();\n\n    get.addEventListener('error', reject);\n    get.addEventListener('success', () => resolve(get.result));\n})}","import {\n    ILoadScript,\n    LocalScriptParams,\n    LocalStylesheetScriptParams\n} from './types';\nimport loadScript from './load-script';\nimport isWindow from './is-window';\n\nexport default async function<P extends ILoadScript['params']>(params: P) {return new Promise((resolve, reject) => {\n    const { requestIdleCallback } = self;\n\n    if (requestIdleCallback) {\n        requestIdleCallback(() => isWindow() && loadScriptWindow(params).then(resolve).catch(reject));\n    } else {\n        setTimeout(() => isWindow() && loadScriptWindow(params).then(resolve).catch(reject), 0);\n    }\n})}\n\nasync function loadScriptWindow<P extends ILoadScript['params']>(params: P) {return new Promise(async (resolve, reject) => {\n    const { head } = document;\n    const { name, removeExisting } = params as LocalScriptParams;\n    const selector = name && removeExisting && `[data-name=\"${name}\"]`;\n    const existingScript = selector && head.querySelector<HTMLElement>(selector);\n    const ignore = existingScript && existingScript.innerHTML === ((params as LocalStylesheetScriptParams).css || (params as LocalScriptParams).js);\n\n    try {\n        !ignore && await loadScript(params);\n\n        resolve();\n    } catch(error) {\n        reject(error);\n    }\n});}","import {\n    MessageAction,\n    DbKeyPath,\n    DbStoreName,\n    Selector,\n    StringConstant,\n    ScriptName,\n    regex\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport sendMessage from './send-message';\nimport getData from './get-indexed-db-data';\nimport loadScript from './handle-load-script';\n\nconst { customElementName: keyPath } = DbKeyPath;\nconst { customElementName: storeName } = DbStoreName;\nconst { comma, semiColon, nothing } = StringConstant;\nconst { textModeElement } = regex;\n\nexport default function() {\n    isWindow() && getTextModeCssWindow();\n    isWorker() && getTextModeCssWorker();\n}\n\nfunction getTextModeCssWindow() {\n    const { VamtigerBrowserMethod } = self;\n    const { support, workerSupport, textMode } = VamtigerBrowserMethod;\n    const message = workerSupport && workerSupport.indexedDbIsAccessible && {\n        action: MessageAction.getTextModeCss,\n        params: {}\n    };\n\n    if (textMode && message) {\n        sendMessage(message);\n    } else if (textMode && support && support.indexedDbIsAccessible) {\n        getTextModeCssWindowIndexDb()\n    } else {\n        getTextModeCssFromMetaElement()\n    }\n}\n\nasync function getTextModeCssWindowIndexDb() {\n    const customElementNames = await getData({\n        storeName,\n        keyPath\n    }) || [];\n    const names = customElementNames.map(({ name }) => name);\n    const css = getCss(names);\n    const params = css && {\n        name: ScriptName.textMode,\n        css,\n        removeExisting: true\n    };\n\n    params && loadScript(params);\n}\n\nasync function getTextModeCssWorker() {\n    const customElementNames = await getData({\n        storeName,\n        keyPath\n    }) || [];\n    const names = customElementNames.map(({ name }) => name);\n    const css = getCss(names);\n    const message = css && {\n        action: MessageAction.loadScript,\n        params: {\n            name: ScriptName.textMode,\n            css,\n            removeExisting: true\n        }\n    };\n\n    message && sendMessage(message);\n}\n\nfunction getTextModeCssFromMetaElement() {\n    const { VamtigerBrowserMethod } = self;\n    const { metaElement } = VamtigerBrowserMethod;\n    const customElementMetaElement = metaElement && metaElement.querySelector<HTMLMetaElement>(Selector.customElementNameMetaElement);\n    const names = customElementMetaElement && (Array\n        .from(customElementMetaElement.children) as HTMLMetaElement[])\n        .map(({ dataset }) => dataset.name || '')\n        .filter(name => name)\n        || [];\n    const css = getCss(names);\n    const params = css && {\n        name: ScriptName.textMode,\n        css,\n        removeExisting: true\n    };\n\n    params && loadScript(params);\n}\n\nfunction getCss(names: string[]) {\n    const selector = names\n        .filter(name => !name.match(textModeElement))\n        .map(name => `${Selector.htmlTextMode} ${name}`)\n        .join(comma);\n    const cssBody = selector && [\n        'display: none'\n    ].join(semiColon);\n    const css = selector && cssBody && [\n        selector,\n        '{',\n        cssBody,\n        '}'\n    ].join(nothing);\n\n    return css;\n}","import {\n    ISaveCustomeElementName,\n    DbKeyPath,\n    DbStoreName,\n    MessageAction,\n    Selector\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport sendMessage from './send-message';\nimport save from './save-indexed-db-data';\nimport getTextModeCss from './get-text-mode-css';\n\nconst { customElementName: keyPath } = DbKeyPath;\nconst { customElementName: storeName } = DbStoreName;\n\nexport default function (params: ISaveCustomeElementName) {\n    isWindow() && saveCustomElementNameWindow(params);\n\n    isWorker() && saveCustomElementNameWorker(params)\n}\n\nfunction saveCustomElementNameWindow(params: ISaveCustomeElementName) {\n    const { VamtigerBrowserMethod } = self;\n    const { support, workerSupport } = VamtigerBrowserMethod;\n    const message = workerSupport && workerSupport.indexedDbIsAccessible && {\n        action: MessageAction.saveCustomElementName,\n        params\n    };\n\n    if (message) {\n        sendMessage(message);\n    } else if (support && support.indexedDbIsAccessible) {\n        saveCustomElementNameWindowIndexDb(params);\n    } else {\n        saveCustomeElementNameDocument(params);\n    }\n}\n\nfunction saveCustomElementNameWorker(params: ISaveCustomeElementName) {\n    saveCustomElementNameIndexDb(params);\n}\n\nfunction saveCustomElementNameIndexDb(params: ISaveCustomeElementName) {\n    const { name } = params;\n    const saveParams = name && {\n        storeName,\n        keyPath,\n        data: {\n            name,\n            ...params\n        },\n        successAction: MessageAction.getTextModeCss\n    };\n\n    saveParams && save(saveParams);\n}\n\nasync function saveCustomElementNameWindowIndexDb(params: ISaveCustomeElementName) {\n    const { name } = params;\n    const saveParams = name && {\n        storeName,\n        keyPath,\n        data: {\n            name,\n            ...params\n        }\n    };\n\n    saveParams && await save(saveParams);\n\n    getTextModeCss();\n}\n\nfunction saveCustomeElementNameDocument({name}: ISaveCustomeElementName) {\n    const { VamtigerBrowserMethod } = self;\n    const { metaElement } = VamtigerBrowserMethod;\n    const customElementMetaElement = metaElement && metaElement.querySelector<HTMLMetaElement>(Selector.customElementNameMetaElement);\n    const selector = customElementMetaElement && `meta[data-name=\"${name}\"]`;\n    const existingMetaElement = selector && customElementMetaElement && customElementMetaElement.querySelector<HTMLMetaElement>(selector);\n    const newMetaElement = !existingMetaElement && document.createElement('meta');\n\n    if (customElementMetaElement && newMetaElement) {\n        newMetaElement.dataset.name = name;\n\n        customElementMetaElement.appendChild(newMetaElement);\n\n        getTextModeCss();\n    }\n}","import {\n    IDefineCustomElement,\n    ErrorMessage,\n    ignore as doNothing\n} from './types';\nimport saveCustomElementName from './save-custom-element-name';\n\nconst { unsupportedFeature } = ErrorMessage;\n\nexport default function defineCustomElement({ name, constructor, ignore }: IDefineCustomElement) {\n    const { customElements } = self;\n    const define = customElements && customElements.define;\n    const existingElement = define && customElements.get && customElements.get(name);\n\n    if (define && !existingElement) {\n        customElements.define(name, constructor);\n        saveCustomElementName({name});\n    } else if (existingElement) {\n        doNothing();\n    } else if (!ignore) {\n        defineCustomElement({ name, constructor, ignore: true });\n    } else {\n        throw new Error(`${unsupportedFeature}: Custom Elements - ${name}`);\n    }\n}","import { IPause } from './types';\n\nexport default ({ milliseconds = 1000 }: IPause) => new Promise((resolve, reject) => setTimeout(resolve, milliseconds));","\nimport {\n    ILoadContainerStylesheets,\n    ScriptNameSuffix,\n    StringConstant,\n    Selector\n} from './types';\nimport loadScript from './load-script'\n\nconst { dash } = StringConstant;\n\nexport default function(params: ILoadContainerStylesheets) { return new Promise((resolve: (styleElements: HTMLStyleElement[]) => void, reject) => {\n    const { requestIdleCallback } = self;\n\n    if (requestIdleCallback) {\n        requestIdleCallback(() => loadStylesheets(params, resolve).catch(reject));\n    } else {\n        setTimeout(() => loadStylesheets(params, resolve).catch(reject), 0);\n    }\n})};\n\nasync function loadStylesheets(params: ILoadContainerStylesheets, resolve: (styleElements: HTMLStyleElement[]) => void) {\n    const { container, name } = params;\n    const styles = Array\n        .from(container.content.querySelectorAll<HTMLStyleElement>(Selector.style))\n        .map((style, index) => ({\n            name: [\n                name,\n                ScriptNameSuffix.style,\n                index++\n            ].join(dash),\n            css: style.innerHTML\n        }));\n    const stylesheets = Array\n        .from(container.content.querySelectorAll<HTMLLinkElement>(Selector.stylesheet))\n        .map((stylesheet, index) => ({\n            name: [\n                name,\n                ScriptNameSuffix.stylesheet,\n                index++\n            ].join(dash),\n            href: stylesheet.href\n        }));\n    const styleElements = await Promise.all([\n        ...styles.map(loadScript),\n        ...stylesheets.map(loadScript)\n    ]);\n\n    resolve(styleElements);\n}","import {\n    IGetElementTemplate,\n    TagName,\n    ErrorMessage\n} from './types';\nimport loadContainerStylesheets from './load-container-stylesheets';\n\nconst {\n    noElementName,\n    noTemplate,\n    noElementForSelector\n} = ErrorMessage;\n\nexport default async function (params: IGetElementTemplate) {\n    const { name, template, loadStylesheets, selector } = params;\n    const container = name && template && document.createElement(TagName.template);\n\n    let element: HTMLElement | null = null;\n\n    if (!name) {\n        throw new Error(noElementName);\n    } else if (!template) {\n        throw new Error(noTemplate);\n    }\n\n    if (container) {\n        container.innerHTML = template;\n\n        element = selector && container.content.firstElementChild && container.content.firstElementChild.querySelector(selector)\n            || container.content.firstElementChild as HTMLElement;\n\n        loadStylesheets && element && await loadContainerStylesheets({\n            ...params,\n            container\n        });\n    }\n\n    if (!element) {\n        throw new Error(noElementForSelector);\n    }\n\n    element.dataset.name = name;\n\n    return element;\n}","import {\n    IGetElementUrl,\n    TagName,\n    ErrorMessage\n} from './types';\nimport loadContainerStylesheets from './load-container-stylesheets';\n\nconst {\n    noElementName,\n    noElementSelector,\n    noTemplateUrl,\n    noTemplateForUrl,\n    noElementForSelector\n} = ErrorMessage;\n\nexport default async function (params: IGetElementUrl) {\n    const { name, url, selector, loadStylesheets } = params;\n    const { head } = document;\n    const template = name && selector && url && await fetch(url)\n        .then(response => response.text());\n    const container = template && document.createElement(TagName.template);\n\n    let element: HTMLElement | null = null;\n\n    if (!name) {\n        throw new Error(noElementName);\n    } else if (!selector) {\n        throw new Error(noElementSelector);\n    } else if (!url) {\n        throw new Error(noTemplateUrl);\n    } else if (!template) {\n        throw new Error(noTemplateForUrl);\n    }\n\n    if (container) {\n        container.innerHTML = template;\n\n        element = container.content.querySelector<HTMLElement>(selector);\n\n        loadStylesheets && element && await loadContainerStylesheets({\n            ...params,\n            container\n        });\n    }\n\n    if (!element) {\n        throw new Error(noElementForSelector);\n    }\n\n    element.setAttribute('dataset-name', name);\n\n    return element;\n}\n","import {\n    GetElementParams,\n    IGetElementTemplate,\n    IGetElementUrl,\n    Selector\n} from './types';\nimport getElementFromTemplate from './get-element-from-template';\nimport getElementFromUrl from './get-element-from-url';\nimport { removeScripts } from './remove-redundant-scripts';\n\nconst { script: selector } = Selector;\n\nexport default async function<P extends GetElementParams>(params: P) { return new Promise((resolve: (element: HTMLElement) => void, reject) => {\n    const { requestIdleCallback } = self;\n\n    if (requestIdleCallback) {\n        requestIdleCallback(() => getElement(params, resolve).catch(reject));\n    } else {\n        setTimeout(() => getElement(params, resolve).catch(reject), 0);\n    }\n})}\n\nexport async function getElement<P extends GetElementParams> (params: P, resolve: (element: HTMLElement) => void) {\n    let element: HTMLElement;\n\n    if ((params as IGetElementUrl).url) {\n        element = await getElementFromUrl(params as IGetElementUrl);\n    } else {\n        element = await getElementFromTemplate(params as IGetElementTemplate);\n    }\n\n    element && await removeScripts({ selector, parent: element });\n\n    resolve(element);\n}","import {\n    IQueue,\n    IQueueEntry,\n    IQueueHandleExpiredQueueEntry,\n    TimeoutDuration\n} from './types';\n\nconst { webComponent: timeout } = TimeoutDuration;\n\nexport default function ({key, resolve, reject, queue: currentQueue }: IQueue) {\n    const queueEntry = {\n        resolve,\n        reject\n    };\n\n    let queue: Set<IQueueEntry> | undefined;\n\n    !currentQueue.has(key) && currentQueue.set(key, new Set());\n\n    queue = currentQueue.get(key);\n\n    queue && queue.add(queueEntry);\n\n    setTimeout(() => handleExpiredQueueEntry({ key, queueEntry, queue: currentQueue }), timeout)\n}\n\nfunction handleExpiredQueueEntry({ key, queueEntry, queue: currentQueue }: IQueueHandleExpiredQueueEntry) {\n    const queue = currentQueue.get(key);\n\n    if (queue) {\n        queue.has(queueEntry) && queue.delete(queueEntry);\n\n        !queue.size && currentQueue.delete(key);\n    }\n}\n","import {\n    IDequeue\n} from './types';\n\nexport default function ({ key, match = false, data, queue: currentQueue }: IDequeue) {\n    const { VamtigerBrowserMethod } = self;\n    const { messageQueue } = VamtigerBrowserMethod;\n    const keyRegex = match && new RegExp(`^${key}`);\n    const queueKey = keyRegex && Array\n        .from((currentQueue || messageQueue).keys())\n        .find(key => key.match(keyRegex))\n        || key;\n    const queue = (currentQueue || messageQueue).get(queueKey) || new Set();\n\n    Array.from(queue).forEach((queueEntry) => {\n        queueEntry.resolve(data);\n\n        queue.delete(queueEntry);\n    });\n}","import {\n    IGetWebComponentData,\n    MessageAction,\n    DbKeyPath,\n    DbStoreName,\n    ScriptType\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport sendMessage from './send-message';\nimport getData from './get-indexed-db-data';\nimport dequeue from './dequeue';\n\nconst { getWebComponentData: action } = MessageAction;\nconst { parse } = JSON;\n\nexport default function (params: IGetWebComponentData) {\n    const { VamtigerBrowserMethod } = self;\n    const { support, workerSupport, worker } = VamtigerBrowserMethod;\n\n    if (isWindow()) {\n        if (worker && workerSupport && workerSupport.indexedDbIsAccessible) {\n            return getWebComponentDataWindowWorker(params);\n        } else if (worker && support && support.indexedDbIsAccessible) {\n            getWebComponentDataWindow(params);\n        } else {\n            getWebComponentDataHead(params);\n        }\n    } else if (isWorker()) {\n        return getWebComponentDataWorker(params);\n    }\n}\n\nexport async function getWebComponentDataWindow({ key }: IGetWebComponentData) {\n    const { VamtigerBrowserMethod } = self;\n    const { messageQueue } = VamtigerBrowserMethod;\n    const data = await getWebComponentData({ key });\n    const dequeueParams = data && {\n        key,\n        data,\n        queue: messageQueue\n    };\n\n    if (dequeueParams) {\n        dequeue(dequeueParams);\n    }\n}\n\nasync function getWebComponentDataWindowWorker({ key }: IGetWebComponentData) {\n    const message = {\n        action,\n        params: {\n            key\n        }\n    };\n\n    sendMessage(message);\n}\n\nexport async function getWebComponentDataWorker({ key }: IGetWebComponentData) {\n    const data = await getWebComponentData({ key });\n    const message = data && data.jsonLd && {\n        action: MessageAction.dequeue,\n        params: {\n            key,\n            data: {\n                jsonLd: data.jsonLd,\n                json: data.json\n            }\n        }\n    };\n\n    return message;\n}\n\nexport async function getWebComponentData({ key }: IGetWebComponentData) {\n    const webComponentData = await getData({\n        storeName: DbStoreName.webComponent,\n        keyPath: DbKeyPath.webComponent,\n        key\n    });\n\n    return webComponentData;\n}\n\nfunction getWebComponentDataHead({ key }: IGetWebComponentData) {\n    const { head } = document;\n    const { VamtigerBrowserMethod } = self;\n    const { messageQueue } = VamtigerBrowserMethod;\n    const jsonLdSelector = `script[data-json-ld=\"${key}\"][type=\"${ScriptType.jsonld}\"]`;\n    const jsonSelector = `script[data-json-ld=\"${key}\"][type=\"${ScriptType.json}\"]`;\n    const jsonLdScripts = Array.from(head.querySelectorAll<HTMLScriptElement>(jsonLdSelector));\n    const jsonScript = head.querySelector<HTMLScriptElement>(jsonSelector);\n    const data = jsonLdScripts.length && {\n        jsonLd: jsonLdScripts.map(({innerHTML}) => innerHTML && parse(innerHTML)),\n        json: jsonScript && jsonScript.innerHTML && parse(jsonScript.innerHTML) || {}\n    };\n    const dequeueParams = data && {\n        key,\n        data,\n        queue: messageQueue\n    };\n\n    dequeueParams && dequeue(dequeueParams);\n}","import {\n    ISaveWebComponentData,\n    ISaveWebComponentDataWorker,\n    MessageAction,\n    DbStoreName,\n    DbKeyPath\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport save from './save-indexed-db-data';\nimport sendMessage from './send-message';\nimport getWebComponentData from './get-web-component-data';\nimport removeRedundantScripts from './remove-redundant-scripts';\n\nconst { webComponent: storeName } = DbStoreName;\nconst { webComponent: keyPath } = DbKeyPath;\n\nexport default function (params: ISaveWebComponentData) {\n    if (isWindow()) {\n        return saveWebComponentDataWindow(params);\n    } else if (isWorker()) {\n        return saveWebComponentDataWorker(params);\n    }\n}\n\nasync function saveWebComponentDataWindow(params: ISaveWebComponentData) {\n    const { VamtigerBrowserMethod } = self;\n    const { support, workerSupport } = VamtigerBrowserMethod;\n    const { url: key } = params;\n    const selector = getSelector({ url: key });\n    const data = getData(params);\n    const message = data && {\n        action: MessageAction.saveWebComponentData,\n        params: data\n    };\n\n    if (workerSupport && workerSupport.indexedDbIsAccessible) {\n        message && sendMessage(message);\n    } else if (support && support.indexedDbIsAccessible) {\n        await saveWebComponentDataIndexDb(params);\n        await getWebComponentData({ key });\n        await removeRedundantScripts({ selector });\n    }\n}\n\nasync function saveWebComponentDataWorker(params: ISaveWebComponentDataWorker) {\n    const { url } = params;\n    const selector = getSelector({ url });\n    const saveData = await saveWebComponentDataIndexDb(params);\n    const getWebComponentDataMessage = {\n        action: MessageAction.getWebComponentData,\n        params: {\n            key: url\n        }\n    };\n    const removeRedundantScriptsMessage = {\n        action: MessageAction.removeRedundantScripts,\n        params: {\n            selector\n        }\n    };\n\n    sendMessage(getWebComponentDataMessage);\n    sendMessage(removeRedundantScriptsMessage);\n}\n\nasync function saveWebComponentDataIndexDb(params: ISaveWebComponentData) {\n    const data = getData(params);\n    const saveParams = data && {\n        storeName,\n        keyPath,\n        data,\n        successAction: MessageAction.getWebComponentData\n    };\n\n    saveParams && await save(saveParams);\n}\n\nfunction getData({ url, created = new Date().getTime(), json, jsonLd }: ISaveWebComponentData) {\n    const data = url && jsonLd && {\n        url,\n        created,\n        jsonLd: jsonLd,\n        json: json\n    };\n\n    return data;\n}\n\nfunction getSelector({ url }: Pick<ISaveWebComponentData, 'url'>) {\n    const selector = `script[type=\"application/json\"][data-json-ld=\"${url}\"]`;\n\n    return selector;\n}","import {\n    ILoadData,\n    IJsonData,\n    ILoadDataGetJsonJsonLd,\n    Selector,\n    ILoadDataGetFeldData,\n    ScriptType\n} from './types';\nimport loadScript from './load-script';\nimport saveWebComponentData from './save-web-component-data';\nimport isWindow from './is-window';\nimport getJsonLd from './get-json-ld';\nimport removeRedundantScripts from './remove-redundant-scripts';\n\nconst { parse, stringify } = JSON;\nconst emptyJsonLd = {\n    jsonLd: [],\n    json: {}\n};\n\nexport default async function (params: ILoadData) {\n    return await (isWindow() && loadWebComponentData(params));\n}\n\nasync function loadWebComponentData({ url, loadJsonJsonLd }: ILoadData) {\n    const { VamtigerBrowserMethod, _ } = self;\n    const { has, get, set } = _;\n    const { worker } = VamtigerBrowserMethod;\n    const { head } = document;\n    const jsonLdSelector = `script[type=\"application/ld+json\"][data-json-ld=\"${url}\"]`;\n    const { jsonLd, json } = await getWebComponentData({ url });\n    const jsonJsonLdData = loadJsonJsonLd && json && Array.isArray(json.jsonLd) && await Promise.all((json.jsonLd as ILoadDataGetJsonJsonLd[]).map(getJsonJsonLd));\n    const params = jsonLd && {\n        url,\n        created: new Date().getTime(),\n        jsonLd,\n        json\n    };\n    const jsonLdScript = head.querySelector<HTMLScriptElement>(jsonLdSelector);\n    const removeScriptParams = {\n        selector: `[type=\"${ScriptType.json}\"][data-name=\"${url}\"]`\n    }\n\n    if (jsonJsonLdData) {\n        jsonJsonLdData.forEach(currentJsonJsonLdData => currentJsonJsonLdData.forEach(({index, key, jsonLd: data}) => {\n            if (jsonLd && Array.isArray(jsonLd) && has(jsonLd, index) && key && get(jsonLd, index)[key] === true && data) {\n                set(jsonLd, `${index}.${[key]}`, data);\n            }\n        }));\n\n        if (jsonLdScript && jsonLd) {\n            head.removeChild(jsonLdScript);\n\n            await Promise.all(jsonLd.map(currentJsonLd => loadScript({\n                name: url,\n                json: stringify(currentJsonLd),\n                jsonld: true\n            })));\n\n            await removeRedundantScripts(removeScriptParams);\n        }\n    }\n\n    if (worker && params) {\n        saveWebComponentData(params);\n    }\n}\n\nasync function getJsonJsonLd({ index, fields }: ILoadDataGetJsonJsonLd) {\n    const keys = Object.keys(fields);\n    const jsonJsonLd = await Promise.all(keys.map(key => getFieldData({key, urls: fields[key]}).then(fieldData => ({index, ...fieldData}))));\n\n    return jsonJsonLd;\n}\n\nasync function getFieldData({ urls: currentUrls, key }: ILoadDataGetFeldData) {\n    const loadJsonJsonLd = false;\n    const urls = Array.isArray(currentUrls) && currentUrls.filter(url => typeof url === 'string') || [];\n    const fieldData = await Promise.all(urls.map(url => getJsonLd({ jsonLd: url, loadJsonJsonLd })));\n    const data = {\n        key,\n        jsonLd: [] as IJsonData['jsonLd']\n    };\n\n    fieldData.forEach(({jsonLd}) => jsonLd && jsonLd.forEach(currentJsonLd => currentJsonLd && data.jsonLd.push(currentJsonLd)));\n\n    return data;\n}\n\nasync function getWebComponentData({ url }: ILoadData) {\n    try {\n        const { head } = document;\n        const selector = `${Selector.script}[src=\"${url}\"]`;\n        const jsonLdSelector = `script[type=\"application/ld+json\"][data-json-ld=\"${url}\"]`;\n        const jsonSelector = `script[type=\"application/json\"][data-json-ld=\"${url}\"]`;\n        const existingScript = head.querySelector(selector);\n        const script = !existingScript && await loadScript({ src: url });\n        const scripts = script && await Promise.all([\n            Array\n                .from(head.querySelectorAll<HTMLScriptElement>(jsonLdSelector))\n                .map(({ innerHTML }) => innerHTML),\n            head.querySelector<HTMLScriptElement>(jsonSelector)\n        ]);\n        const [ jsonLdScripts, jsonScript ] = scripts || [undefined, undefined];\n        const jsonLd = jsonLdScripts && jsonLdScripts.map(jsonLdScript => parse(jsonLdScript));\n        const json = jsonScript && parse(jsonScript.innerHTML) || {};\n        const webComponentData = {\n            jsonLd,\n            json\n        };\n\n        return webComponentData;\n    } catch(error) {\n        console.error(error);\n\n        return emptyJsonLd;\n    }\n}","import {\n    IGetJsonLd,\n    WebComponentDataResolve,\n    ErrorResolve\n} from './types';\nimport queue from './queue';\nimport loadWebComponentData from './load-web-component-data';\nimport getWebComponentData from './get-web-component-data';\n\nexport default function ({ jsonLd: url, loadJsonJsonLd = true }: IGetJsonLd) {return new Promise(async (resolve: WebComponentDataResolve, reject: ErrorResolve) => {\n    const { messageQueue } = VamtigerBrowserMethod;\n    const queueParams = {\n        key: url,\n        queue: messageQueue,\n        resolve,\n        reject\n    };\n\n    queue(queueParams);\n\n    try {\n        await loadWebComponentData({ url, loadJsonJsonLd });\n    } catch(error) {\n        console.error(error);\n    }\n\n    getWebComponentData({ key: url });\n})}","import {\n    ISaveJsonLd,\n    ISaveJsonLdWindow,\n    ILoadJsonScriptParams,\n    ScriptType,\n    LocalScriptParams\n} from './types';\nimport isWindow from './is-window';\nimport loadScript from './load-script';\n\nconst { stringify } = JSON;\nconst { requestIdleCallback } = self;\n\nexport default function (params: ISaveJsonLd) {return new Promise((resolve, reject) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => saveJsonLdWindow({...params, resolve, reject}));\n    } else {\n        setTimeout(() => saveJsonLdWindow({...params, resolve, reject}), 0);\n    }\n})}\n\nasync function saveJsonLdWindow({url, dependency = false, data, resolve, reject}: ISaveJsonLdWindow) {\n    const { json, jsonLd } = data;\n    const params = ([\n        json && Object.keys(json).length && {\n            name: url,\n            json: stringify(json),\n            jsonld: false\n        } as ILoadJsonScriptParams,\n        jsonLd && Object.keys(jsonLd).length && {\n            name: url,\n            js: stringify(jsonLd),\n            jsonld: true\n        } as LocalScriptParams\n    ].filter(currentParams => !dependency && currentParams)) as (ILoadJsonScriptParams | LocalScriptParams)[];\n\n    if (params.length) {\n        Promise\n            .all(params.map(loadScript))\n            .then(resolve)\n            .catch(reject);\n    } else {\n        resolve();\n    }\n}","import {\n    IGetJsonData,\n    IGetJsonDataWindow\n} from './types';\nimport isWindow from './is-window';\nimport queue from './queue';\nimport saveJson from './save-json';\nimport saveWebComponentData from './save-web-component-data';\nimport getWebComponentData from './get-web-component-data';\n\nconst { requestIdleCallback } = self;\n\nexport default function (params: IGetJsonData) {return new Promise((resolve: IGetJsonDataWindow['resolve'], reject: IGetJsonDataWindow['reject']) => {\n    if (requestIdleCallback) {\n        if (isWindow()) {\n            requestIdleCallback(() => handleJsonFromUrlWindow({...params, resolve, reject}));\n        }\n    } else {\n        if (isWindow()) {\n            setTimeout(() => handleJsonFromUrlWindow({...params, resolve, reject}), 0);\n        }\n    }\n})}\n\nasync function handleJsonFromUrlWindow({url, json: data, dependency = false, resolve, reject}: IGetJsonDataWindow) {\n    const { VamtigerBrowserMethod } = self;\n    const { messageQueue } = VamtigerBrowserMethod;\n    const queueParams = {\n        key: url,\n        queue: messageQueue,\n        resolve,\n        reject\n    };\n    const webComponentData = url && data && data.jsonLd && data.json && {\n        url,\n        jsonLd: data.jsonLd,\n        json: data.json\n    };\n\n    queue(queueParams);\n\n    if (data) {\n\n        await saveJson({url, data, dependency});\n    }\n\n    if (webComponentData) {\n        await saveWebComponentData(webComponentData);\n    } else {\n        await getWebComponentData({key: url});\n    }\n}","import {\n    IGetJson,\n    IGetJsonFromUrl\n} from './types';\nimport queue from './queue';\nimport loadScript from './load-script';\nimport getJsonData from './get-json-data';\n\nconst { requestIdleCallback } = self;\n\nexport default async function (params: IGetJson) {\n    const { json: url, dependency = false } = params;\n    const json = await getJsonFromUrl(params);\n    const data = await getJsonData({url, dependency, json});\n\n    return data;\n}\n\nfunction getJsonFromUrl(params: IGetJson) {return new Promise((resolve: IGetJsonFromUrl['resolve'], reject: IGetJsonFromUrl['reject']) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => loadJsonFromUrl({...params, resolve, reject}));\n    } else {\n        setTimeout(() => loadJsonFromUrl({...params, resolve, reject}));\n    }\n})}\n\nfunction loadJsonFromUrl({json: url, resolve, reject}: IGetJsonFromUrl) {\n    const { head } = document;\n    const { VamtigerBrowserMethod } = self;\n    const selector = `script[src=\"${url}\"]`;\n    const existingScript = head.querySelector(selector);\n    const queueParams = !existingScript && {\n        key: url,\n        queue: VamtigerBrowserMethod.queue,\n        resolve,\n        reject\n    };\n    const loadScriptParams = queueParams && {\n        name: url,\n        src: url\n    };\n\n    if (queueParams && loadScriptParams) {\n        queue(queueParams);\n\n        loadScript(loadScriptParams);\n    } else {\n        resolve();\n    }\n}","import {\n    IGetData,\n    ErrorMessage,\n    GetDataResult\n} from './types';\nimport getJsonLd from './get-json-ld';\nimport getJson from './get-json';\n\nconst { noJsonLdParameter } = ErrorMessage;\n\nexport default function <P extends IGetData>(params: P) { return new Promise(async (resolve: (data: GetDataResult<P>) => void, reject) => {\n    const { requestIdleCallback } = self;\n    const { textMode, jsonLd, json, dependency = false } = params;\n    const jsonLdParams = jsonLd && { jsonLd };\n    const jsonParams = json && { json, textMode, dependency};\n\n    if (jsonParams) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => getJson(jsonParams).then((data) => resolve(data as GetDataResult<P>)).catch(reject));\n        } else {\n            setTimeout(() => getJson(jsonParams).then((data) => resolve(data as GetDataResult<P>)).catch(reject), 0);\n        }\n    } else if (jsonLdParams) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => getJsonLd(jsonLdParams).then((data) => resolve(data as GetDataResult<P>)).catch(reject));\n        } else {\n            setTimeout(() => getJsonLd(jsonLdParams).then((data) => resolve(data as GetDataResult<P>)).catch(reject), 0);\n        }\n    } else {\n        reject(new Error(noJsonLdParameter));\n    }\n})}","import {\n    Environment\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport isServiceWorker from './is-service-worker';\n\nexport default function () {\n    const environment = isWorker() && Environment.worker\n        || isServiceWorker() && Environment.serviceWorker\n        || isWindow() && Environment.window\n        || Environment.unknown;\n\n    return environment;\n}","import {\n    IMessageAction,\n    MessageAction\n} from './types';\n\nconst { parse } = JSON;\nconst ignoreMessage = {\n    action: MessageAction.ignore,\n    params: {}\n}\nconst textDecoder = new TextDecoder();\n\nexport default function (event: MessageEvent) {\n    let message: IMessageAction;\n\n    try {\n        message = getMessageData(event) || ignoreMessage;\n    } catch(error) {\n        message = ignoreMessage;\n    }\n\n    return message;\n}\n\nfunction getMessageData({ data: message, ports }: MessageEvent) {\n    const messageData: IMessageAction = typeof message === 'string' && parse(message)\n        || message instanceof Uint8Array && parse(textDecoder.decode(message));\n\n    if (typeof messageData.params === 'string') {\n        messageData.params = {...parse(messageData.params), ports};\n    }\n\n    return messageData;\n}","import {\n    ISaveSupport,\n    MessageAction,\n    DbStoreName,\n    DbKeyPath,\n    Environment\n} from './types';\nimport save from './save-indexed-db-data';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport isServiceWorker from './is-service-worker';\nimport sendMessage from './send-message';\n\nconst { support: storeName } = DbStoreName;\n\nexport default async function (params: ISaveSupport) {\n    isWindow() && saveSupportDataWindow(params);\n\n    (isWorker() || isServiceWorker()) && saveSupportDataWorker(params);\n}\n\nfunction saveSupportDataWindow(params: ISaveSupport) {\n    const { VamtigerBrowserMethod } = self;\n    const { environment, ...support } = params;\n    const { workerSupport } = VamtigerBrowserMethod;\n    const message = workerSupport && workerSupport.indexedDbIsAccessible && {\n        action: MessageAction.saveSupport,\n        params\n    };\n\n    if (environment === Environment.serviceWorker) {\n        VamtigerBrowserMethod.serviceWorkerSupport = support;\n    } else if (environment === Environment.worker) {\n        VamtigerBrowserMethod.workerSupport = support;\n    }\n\n    if (message) {\n        sendMessage(message);\n    } else {\n        saveSupportDataIndexDb(params);\n    }\n}\n\nfunction saveSupportDataWorker(params: ISaveSupport) {\n    saveSupportDataIndexDb(params);\n}\n\nfunction saveSupportDataIndexDb(params: ISaveSupport) {\n    const { environment } = params;\n    const saveParams = environment && {\n        storeName,\n        keyPath: DbKeyPath.support,\n        data: {\n            environment,\n            ...params\n        }\n    };\n\n    saveParams && save(saveParams);\n}","import {\n    CacheName\n} from './types';\n\nconst { vamtigerBrowserMethod: cacheName } = CacheName;\n\nexport default async function () {\n    const { caches } = self;\n    const cache = caches && await caches.open(cacheName).catch(handleError) || undefined;\n\n    return cache;\n}\n\nfunction handleError(error: Error) {\n    console.warn(error.message);\n}","import {\n    ISupport,\n    MessageAction,\n    DbStoreName,\n    DbKeyPath,\n    TimeoutDuration,\n    Environment\n} from './types';\nimport isWorker from './is-worker';\nimport sendMessage from './send-message';\nimport getData from './get-indexed-db-data';\nimport saveSupport from './save-support';\nimport getCache from './get-cache';\n\nconst { support: keyPath } = DbKeyPath;\nconst { support: storeName } = DbStoreName\n\nexport default async function () {\n    const {\n        VamtigerBrowserMethod,\n        localStorage,\n        indexedDB,\n    } = self;\n    const [indexedDbIsAccessible, cache] = await Promise.all([\n        indexDbAccessible(),\n        getCache()\n    ]);\n    const support: ISupport = {\n        cache: Boolean(cache),\n        localStorage: Boolean(localStorage),\n        indexedDb: Boolean(indexedDB),\n        indexedDbIsAccessible,\n        worker: self.hasOwnProperty('Worker'),\n        sharedWorker: self.hasOwnProperty('SharedWorker'),\n        textEncoder: self.hasOwnProperty('TextEncoder'),\n        textDecoder: self.hasOwnProperty('TextDecoder')\n    };\n\n    VamtigerBrowserMethod.support = support;\n\n    isWorker() && sendWorkerSupport();\n}\n\nexport function indexDbAccessible() {return new Promise(async (resolve: (indexDbAccessible: boolean) => void, reject) => {\n    let indexedDbIsAccessible = false;\n    let resolved = false;\n    const environment = Environment.worker;\n    const timeout = setTimeout(() => !resolved && resolve(indexedDbIsAccessible), TimeoutDuration.indexDbIsAccessible);\n\n    await getData({\n        storeName,\n        keyPath,\n        key: environment\n    });\n\n    indexedDbIsAccessible = true;\n    resolved = true;\n\n    resolve(indexedDbIsAccessible);\n})}\n\nexport async function setWorkerSupport(workerSupport: ISupport) {\n    const { VamtigerBrowserMethod } = self;\n    const { support, environment } = VamtigerBrowserMethod;\n\n    VamtigerBrowserMethod.workerSupport = workerSupport;\n\n    support && saveSupport({\n        environment,\n        ...support\n    });\n\n    workerSupport && saveSupport({\n        environment: Environment.worker,\n        ...workerSupport\n    });\n}\n\nfunction sendWorkerSupport() {\n    const { VamtigerBrowserMethod } = self;\n    const message = {\n        action: MessageAction.setWorkerSupport,\n        params: VamtigerBrowserMethod.support || {}\n    };\n\n    sendMessage(message);\n}","const logMessage = 'Message Ignored';\n\nexport default function (params: any) {\n    console.log(logMessage);\n    console.warn(params);\n}","import {\n    ILoadMethod,\n    ILoadMethodWindow,\n    MessageAction,\n    ErrorMessage,\n    ScriptType,\n    StringConstant\n} from './types';\nimport loadScript from './load-script';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport sendMessage from './send-message';\nimport queue from './queue';\nimport getCache from './get-cache';\n\nconst { requestIdleCallback } = self;\nconst { nothing, slash } = StringConstant;\nconst blobParams = {\n    type: ScriptType.js\n}\n\nexport default async function (params: ILoadMethod) {return new Promise((resolve, reject) => {\n    if (isWindow()) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => loadMethodWindow({...params, resolve, reject}))\n        } else {\n            setTimeout(() => loadMethodWindow({...params, resolve, reject}), 0);\n        }\n    } else if (isWorker()) {\n        loadMethodWorker(params)\n            .then(resolve)\n            .catch(reject);\n    }\n})}\n\nasync function loadMethodWindow({relativeUrl, name, resolve, reject}: ILoadMethodWindow) {\n    let scriptLoadError: Error | undefined = undefined;\n\n    const { VamtigerBrowserMethod, _ } = self;\n    const { get } = _;\n    const { worker, workerSupport, origin, messageQueue } = VamtigerBrowserMethod;\n    const src = [\n        origin,\n        relativeUrl\n    ].join(slash);\n    const script = await loadScript({src}).catch(error => scriptLoadError = error);\n    const method: Function | undefined = get(VamtigerBrowserMethod.method, name);\n    const message = workerSupport && workerSupport.cache && worker && typeof method === 'function' && {\n        action: MessageAction.loadMethod,\n        params: {relativeUrl: src, name}\n    };\n    const queueParams = message && {\n        key: src,\n        queue: messageQueue,\n        resolve,\n        reject\n    };\n\n    if (script) {\n        script.dataset.vamtigerBrowserMethodLoadedMethod = name;\n    }\n\n    if (scriptLoadError) {\n        reject(scriptLoadError);\n    } else if (queueParams && message) {\n        queue(queueParams);\n\n        sendMessage(message);\n    } else {\n        resolve();\n    }\n}\n\nasync function loadMethodWorker({relativeUrl: url, name}: ILoadMethod) {\n    const { importScripts } = self;\n    const importMethod = url && importScripts && importScripts(url);\n    const message = {\n        action: MessageAction.dequeue,\n        params: {\n            key: url,\n            data: {}\n        }\n    };\n    const updateMethodMessage = method.hasOwnProperty(name) && {\n        action: MessageAction.updateMethod,\n        params: {name}\n    };\n\n    updateMethodMessage && sendMessage(updateMethodMessage);\n\n    return message;\n}\n","import {\n    IGetMethodResult,\n    IGetMethodResultWindow,\n    MessageAction\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport queue from './queue';\nimport sendMessage from './send-message';\nimport getMessageId from './get-message-id';\n\nconst { requestIdleCallback } = self;\n\nexport default function (params: IGetMethodResult) {return new Promise((resolve, reject) => {\n    if (isWindow()) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => getMethodResultWindow({...params, resolve, reject}));\n        } else {\n            setTimeout(() => getMethodResultWindow({...params, resolve, reject}), 0);\n        }\n    } else if (isWorker()) {\n        getMethodResultWorker(params)\n            .then(resolve)\n            .then(reject);\n    }\n})}\n\nasync function getMethodResultWindow({messageId = getMessageId(), name, params, resolve, reject}: IGetMethodResultWindow) {\n    const { messageQueue } = VamtigerBrowserMethod;\n    const queueParams = {\n        key: messageId,\n        queue: messageQueue,\n        resolve,\n        reject\n    };\n    const message = {\n        action: MessageAction.getMethodResult,\n        params: {\n            name,\n            params,\n            messageId\n        }\n    };\n\n    queue(queueParams);\n\n    sendMessage(message);\n}\n\nasync function getMethodResultWorker({messageId: key = '', name, params}: IGetMethodResult) {\n    const { VamtigerBrowserMethod } = self;\n    const { method } = VamtigerBrowserMethod;\n    const namedMethod = method[name];\n    const result = namedMethod ? await namedMethod(params) : `No method named '${name}'`;\n    const message = {\n        action: MessageAction.dequeue,\n        params: {\n            key,\n            data: result\n        }\n    };\n\n    return message;\n}","import {\n    Prefix\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport isServiceWorker from './is-service-worker';\n\nexport default function () {\n    const prefix = isWindow() && Prefix.messageIdWindow\n        || isWorker() && Prefix.messageIdWorker\n        || isServiceWorker() && Prefix.messageIdServiceWorker\n        || Prefix.messageIdUnknownEnvironment;\n    const time = new Date().getTime();\n    const messageId = prefix && `${prefix}-${time}`;\n\n    return messageId;\n}","import {\n    IUpdateMthod,\n    IAnyObject\n} from './types';\nimport isWindow from './is-window';\nimport getMethodResult from './get-method-result';\n\nconst { requestIdleCallback } = self;\n\nexport default function (params: IUpdateMthod) {\n    if (isWindow()) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => updateMethodWindow(params));\n        } else {\n            setTimeout(() => updateMethodWindow(params), 0)\n        }\n    }\n}\n\nasync function updateMethodWindow({name}: IUpdateMthod) {\n    const { VamtigerBrowserMethod } = self;\n    const { method } = VamtigerBrowserMethod;\n    const nameMethod = method[name];\n\n    if (nameMethod) {\n        method[name] = (params: IAnyObject) => getMethodResult({name, params});\n    }\n}","import {\n    IImportDependencies,\n    Selector,\n    MessageAction,\n    WorkerType\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport isServiceWorker from './is-service-worker';\nimport sendMessge from './send-message';\n\nconst { requestIdleCallback } = self;\n\nexport default function (params: IImportDependencies) {\n    if (isWindow() && requestIdleCallback) {\n        if (requestIdleCallback) {\n            requestIdleCallback(importDependenciesWindow);\n        } else {\n            setTimeout(importDependenciesWindow, 0);\n        }\n    } else if (isWorker()) {\n        importDependenciesWorker(params);\n    }\n}\n\nfunction importDependenciesWindow() {\n    const {'vamtiger-browser-method': metaElement } = self;\n    const dependencyUrlMetaElement = metaElement.querySelector<HTMLMetaElement>(Selector.dependencyUrlMetaElement);\n    const urlMetaElements = dependencyUrlMetaElement && Array.from(dependencyUrlMetaElement.querySelectorAll<HTMLMetaElement>(Selector.urlMetaElement)) || [];\n    const urls = urlMetaElements\n        .map(({dataset}) => dataset.url || '')\n        .filter(url => url);\n    const message = {\n        action: MessageAction.importDependencies,\n        params: {urls},\n        workerType: WorkerType.all\n    };\n\n    sendMessge(message);\n}\n\nfunction importDependenciesWorker({urls = []}: IImportDependencies) {\n    const { importScripts } = self;\n    const action = MessageAction.removeDependencyUrl;\n\n    importScripts && urls.forEach(url => {\n        importScripts(url);\n\n        sendMessge({action, params: {url}});\n    });\n}","import {\n    IRemoveDepencyUrl,\n    Selector\n} from './types';\nimport isWindow from './is-window';\n\nconst { requestIdleCallback } = self;\n\nexport default function (params: IRemoveDepencyUrl) {\n    if (isWindow()) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => removeDependencyUrlWindow(params));\n        } else {\n            setTimeout(() => removeDependencyUrlWindow(params), 0);\n        }\n    }\n}\n\nfunction removeDependencyUrlWindow({url}: IRemoveDepencyUrl) {\n    const {'vamtiger-browser-method': metaElement } = self;\n    const dependencyUrlMetaElement = metaElement.querySelector<HTMLMetaElement>(Selector.dependencyUrlMetaElement);\n    const selector = `meta[data-url=\"${url}\"]`;\n    const urlMetaElement = dependencyUrlMetaElement && dependencyUrlMetaElement.querySelector<HTMLMetaElement>(selector);\n\n    if (urlMetaElement && dependencyUrlMetaElement) {\n        dependencyUrlMetaElement.removeChild(urlMetaElement);\n    }\n}","import {\n    MessageAction,\n    MessageResponse\n} from './types';\nimport getMessageData from './get-message-data';\nimport removeRedundantScripts from './remove-redundant-scripts';\nimport { setWorkerSupport } from './set-support';\nimport saveWebComponentData from './save-web-component-data';\nimport sendMessage from './send-message';\nimport ignoreMessage from './ignore-message';\nimport getWebComponentData from './get-web-component-data';\nimport dequeue from './dequeue';\nimport loadWebComponentData from './load-web-component-data';\nimport saveSupport from './save-support';\nimport saveCustomElementName from './save-custom-element-name';\nimport getTextModeCss from './get-text-mode-css';\nimport loadScript from './handle-load-script';\nimport loadMethod from './load-method';\nimport updateMethod from './update-method';\nimport getMethodResult from './get-method-result';\nimport importDependencies from './import-dependencies';\nimport removeDependencyUrl from './remove-dependency-url';\n\nconst action = {\n    [MessageAction.ignore]: ignoreMessage,\n    [MessageAction.removeRedundantScripts]: removeRedundantScripts,\n    [MessageAction.setWorkerSupport]: setWorkerSupport,\n    [MessageAction.saveWebComponentData]: saveWebComponentData,\n    [MessageAction.getWebComponentData]: getWebComponentData,\n    [MessageAction.dequeue]: dequeue,\n    [MessageAction.loadWebComponentData]: loadWebComponentData,\n    [MessageAction.saveSupport]: saveSupport,\n    [MessageAction.saveCustomElementName]: saveCustomElementName,\n    [MessageAction.getTextModeCss]: getTextModeCss,\n    [MessageAction.loadScript]: loadScript,\n    [MessageAction.loadMethod]: loadMethod,\n    [MessageAction.updateMethod]: updateMethod,\n    [MessageAction.getMethodResult]: getMethodResult,\n    [MessageAction.importDependencies]: importDependencies,\n    [MessageAction.removeDependencyUrl]: removeDependencyUrl\n}\n\nexport default async function (event: MessageEvent) {\n    const { action: actionName, params } = getMessageData(event) || { action: MessageAction.ignore, params: {}};\n    const currentAction = action[actionName];\n    const response = await currentAction(params) as MessageResponse;\n\n    response && sendMessage(response);\n}","import {\n    LocalHostRelativePath\n} from './types';\nimport isLocalHost from './is-local-host';\n\nconst { vamtigerBrowserMethod: url } = LocalHostRelativePath;\n\nexport default async function() {\n    const validUrl = isLocalHost() && await fetch(url)\n        .then(response => response.ok)\n        .catch(error => '');\n    const localHostRelativeUrl = validUrl && url || '';\n\n    return localHostRelativeUrl;\n}","import {\n    HostName\n} from './types';\n\nexport default function() {\n    const { location } = window;\n    const isLocalHost = HostName.localHost === location.hostname;\n\n    return isLocalHost;\n}","import {\n    Selector,\n    ScriptType,\n    StringConstant\n} from './types';\n\nconst params = {\n    type: ScriptType.js\n}\nconst { newline } = StringConstant;\n\nexport default function () {\n    const { head } = document;\n    const { createObjectURL } = URL;\n    const workderScript = head.querySelector<HTMLScriptElement>(Selector.vamtigerBrowserMethod);\n    const workerDependecies = (Array.from(head.querySelectorAll<HTMLScriptElement>(Selector.workderDependency)) || [])\n        .map(({ innerHTML }) => innerHTML)\n        .filter(script => script);\n    const workerScripts = [\n        ...workerDependecies,\n        workderScript && workderScript.innerHTML || ''\n    ].filter(script => script).join(newline.repeat(2));\n    const workerBlob = workerScripts && workerScripts.length && new Blob([workerScripts], params);\n    const workerUrl = workerBlob && createObjectURL && createObjectURL(workerBlob);\n\n    return workerUrl;\n}","import handleMessage from './handle-message';\nimport getLocalHostWorkerUrl from './get-local-host-worker-url';\nimport getWorkerUrl from './get-worker-url';\n\nconst { stringify } = JSON;\n\nlet worker: Worker;\n\nexport default async function () {\n    const localHostWorkerUrl = await getLocalHostWorkerUrl();\n    const workerUrl = getWorkerUrl();\n    const currentWorker = workerUrl && new Worker(localHostWorkerUrl || workerUrl);\n\n    if (currentWorker) {\n        currentWorker.addEventListener('message', handleMessage);\n        currentWorker.addEventListener('error', handleError);\n    }\n\n    worker = worker || currentWorker;\n\n    return worker;\n}\n\nexport function handleError(event: ErrorEvent) {\n    const keys = Object.keys(event) as (keyof ErrorEvent)[];\n\n    keys.forEach(key => console.error(typeof event[key] === 'string' || stringify(event[key])));\n}","import {\n    DataAttribute,\n    StringConstant\n} from './types';\nimport {\n    intersectionObserver as config,\n} from './config';\n\nconst { IntersectionObserver, requestIdleCallback } = self;\nconst { nothing } = StringConstant;\nconst defaultObserver = IntersectionObserver && new IntersectionObserver(handleIntersect, config);\n\nexport default function () {\n    return defaultObserver;\n}\n\nfunction handleIntersect(entries: IntersectionObserverEntry[], observer: IntersectionObserver) {\n    entries.forEach(entry => {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => handleIntersectElement(entry));\n        } else {\n            setTimeout(() => handleIntersectElement(entry), 0);\n        }\n    })\n}\n\nfunction handleIntersectElement(entry: IntersectionObserverEntry) {\n    const {\n        isIntersecting,\n        intersectionRatio,\n        target: element\n    } = entry as IntersectionObserverEntry & {isVisible: boolean;};\n    const { dataset } = element as HTMLElement;\n\n    if (isIntersecting) {\n        dataset[DataAttribute.visible] = intersectionRatio.toString();\n    } else if (dataset[DataAttribute.visible]) {\n        dataset[DataAttribute.visible] = nothing;\n    }\n}","import {\n   StringConstant,\n   regex\n} from './types';\n\nconst { slash } = StringConstant;\nconst { trailingHtml } = regex;\n\nexport default function () {\n    const { pathname: relativePath } = location;\n    const urlPaths = relativePath.match(trailingHtml) && relativePath.split(slash);\n    const pageUrl = urlPaths && urlPaths.slice(0, urlPaths.length - 1).join(slash)\n        || relativePath;\n\n    return pageUrl;\n}","import {\n    LocalHostRelativePath,\n    StringConstant\n} from './types';\nimport { serviceWorker as config } from './config';\nimport isWindow from './is-window';\nimport getPageRelativeUrl from './get-page-relative-url';\n\nconst { slash, nothing } = StringConstant;\nconst { vamtigerBrowserMethod } = LocalHostRelativePath;\n\nexport default async function () {\n    const sharedWorkerRegistration = isWindow() && await getServiceWorker() || undefined;\n\n    return sharedWorkerRegistration;\n}\n\nasync function getServiceWorker() {\n    const { serviceWorker } = navigator;\n    const { origin } = location;\n    const url = [\n        origin,\n        vamtigerBrowserMethod\n    ].join(slash);\n    const pageUrl = getPageRelativeUrl();\n    const secondaryUrl = [\n        pageUrl === slash ? '' : pageUrl,\n        vamtigerBrowserMethod\n    ].join(nothing);\n    const secondaryConfig = {\n        ...config,\n        scope: pageUrl\n    };\n    const sharedWorkerRegistration = serviceWorker && await serviceWorker\n        .register(url, config)\n        .catch(handleError);\n    const secondarySharedWorkerRegistration = !sharedWorkerRegistration && secondaryUrl !== url && serviceWorker && await serviceWorker\n        .register(secondaryUrl, secondaryConfig)\n        .catch(handleError);\n    const registration = sharedWorkerRegistration || secondarySharedWorkerRegistration;\n\n    return registration;\n}\n\nfunction handleError(error: Error) {\n    console.warn(error.message);\n}","import {\n    HandleJsonLdAction,\n    JsonLdActionParams,\n    JsonLdActionMethod,\n    IHandleJsonLd\n} from './types';\nimport dequeue from './dequeue';\n\nconst actionMethod = {\n    [HandleJsonLdAction.dequeue]: dequeue\n}\n\nexport default function (currentParams: IHandleJsonLd) {\n    const { detail } = currentParams;\n    const { action: actionName, params } = detail;\n    const action = getAction(actionName);\n    const actionParams = {\n        ...params,\n        ...getParams(actionName)\n    };\n    const result = action(actionParams);\n\n    return result;\n}\n\nfunction getParams<A extends HandleJsonLdAction>(action: A) {\n    const { VamtigerBrowserMethod } = self;\n    const { queue } = VamtigerBrowserMethod;\n    const params = {\n        [HandleJsonLdAction.dequeue]: {queue}\n    };\n    const currentParams = params[action] as JsonLdActionParams<A>;\n\n    return currentParams;\n}\n\nfunction getAction<A extends HandleJsonLdAction>(actionName: A) {\n    const action = actionMethod[actionName] as JsonLdActionMethod<A>;\n\n    return action;\n}","import {\n    IHandleJsonLd,\n    ElementId,\n    DataAttribute,\n    StringConstant,\n    Selector,\n    CustomEventName\n} from './types';\nimport getWorker from './get-worker';\nimport isWindow from './is-window';\nimport isTextMode from './is-text-mode';\nimport getIntersectionObserver from './get-intersection-observer';\nimport getServiceWorkerRegistration from './get-service-worker-registration';\nimport handleMessage from './handle-message';\nimport handleJsonLd from './handle-json-ld';\n\nconst { nothing } = StringConstant;\nconst metaElementHtml = [\n    '<meta data-custom-element-name>',\n    '<meta data-dependency>'\n].join(nothing);\n\nexport default function () {\n    if (isWindow()) {\n        setEventListeser();\n\n        setupWindow();\n    }\n}\n\nfunction setEventListeser() {\n    const { serviceWorker } = navigator;\n\n    serviceWorker && serviceWorker.addEventListener('message', handleMessage);\n}\n\nasync function setupWindow() {\n    const { serviceWorker } = navigator;\n    const { head } = document;\n    const { origin: defaultOrigin } = location;\n    const vamtigerBrowserMethodScript = head.querySelector<HTMLScriptElement>(Selector.vamtigerBrowserMethodJsonJs);\n    const originPaths = vamtigerBrowserMethodScript && vamtigerBrowserMethodScript\n        .src\n        .split(StringConstant.slash);\n    const origin = originPaths && originPaths\n        .slice(0, originPaths.length - 1)\n        .join(StringConstant.slash)\n        || defaultOrigin;\n    const firstMetaElement = head.querySelector('meta');\n    const { VamtigerBrowserMethod } = self;\n    const { metaElement = document.createElement('meta') } = VamtigerBrowserMethod;\n    const customeElementMetaElement = document.createElement('meta');\n    const textMode = isTextMode();\n    const serviceWorkerRegistration = await getServiceWorkerRegistration();\n    const messageChannel = new MessageChannel();\n    const { port1 } = messageChannel;\n\n    customeElementMetaElement.dataset[DataAttribute.customElementName] = nothing;\n\n    metaElement.id = ElementId.metaElement;\n\n    metaElement.innerHTML = metaElementHtml;\n\n    head.insertBefore(metaElement, firstMetaElement);\n\n    VamtigerBrowserMethod.origin = origin;\n\n    VamtigerBrowserMethod.metaElement = metaElement;\n\n    VamtigerBrowserMethod.worker = await getWorker();\n\n    VamtigerBrowserMethod.textMode = textMode;\n\n    VamtigerBrowserMethod.intersectionObserver = getIntersectionObserver();\n\n    VamtigerBrowserMethod.serviceWorkerRegistration = serviceWorkerRegistration;\n\n    VamtigerBrowserMethod.serviceWorker = serviceWorker && serviceWorker.controller || undefined;\n\n    VamtigerBrowserMethod.messageChannel = messageChannel;\n\n    addEventListener(CustomEventName.vamtigerBrowserMethod, event => handleJsonLd(event as IHandleJsonLd));\n\n    port1.addEventListener('message', handleMessage);\n}","export default function () {\n    const { documentElement } = document;\n    const isTextMode = documentElement.dataset.hasOwnProperty('vamtigerTextMode');\n\n    return isTextMode;\n}","import {\n    selector\n} from './types'\nimport handleMessage from './handle-message';\nimport isWorker from './is-worker';\nimport removeRedundantScripts from './remove-redundant-scripts';\n\nexport default function () {\n    isWorker() && setupWorker();\n}\n\nfunction setupWorker() {\n    addEventListener('message', handleMessage);\n\n    return removeRedundantScripts({\n        selector: selector.redundantScripts\n    });\n}","export default `<figcaption data-linked-data-caption></figcaption> <span data-linked-data-caption-element></span> <a></a>`;","import {\n    IGetTemplate,\n    GetTemplate,\n    StringConstant,\n    AttributesKey\n} from './types';\nimport html from './html';\n\nlet template: HTMLTemplateElement;\nlet templateHtml: string;\n\nconst { document } = self;\nconst { nothing } = StringConstant;\n\nif (document) {\n    template = document.createElement('template');\n\n    templateHtml = [\n        html\n    ].join(nothing);\n\n    template.innerHTML = templateHtml;\n}\n\nexport default <P extends IGetTemplate>(params: P) => {\n    const {\n        selector,\n        attributes = {},\n        properties = {}\n    } = params;\n    const attributesKeys = Object.keys(attributes) as AttributesKey[]\n    const templateElement = template.content.querySelector(selector);\n    const currentTemplate = templateElement && templateElement.cloneNode(true) as GetTemplate<P>;\n\n    if (currentTemplate) {\n        Object.assign(currentTemplate, properties);\n\n        attributesKeys.forEach(key => attributes[key] && currentTemplate.setAttribute(key, attributes[key] || ''));\n    }\n\n    return currentTemplate;\n};","import {\n    IGetMicrodataCaption,\n    IAnyObject,\n    Selector,\n    StringConstant\n} from './types';\nimport getTemplate from './get-template';\n\nconst { nothing, slash } = StringConstant;\n\nexport default function ({ imageData, fieldKey }: IGetMicrodataCaption) {\n    const field = imageData[fieldKey] as IAnyObject | undefined;\n    const fieldData = Array.isArray(field) && field || [field] || [];\n    const caption = field && getTemplate({\n        selector: Selector.linkedDataCaption,\n        attributes: {\n            itemprop: fieldKey\n        }\n    });\n\n    let itemtype: string;\n    let currentCaption: HTMLElement | null;\n    let currentProducerCaptionElements: (HTMLElement | null)[]\n\n    fieldData.forEach(currentFieldData => {\n        if (currentFieldData) {\n            itemtype = currentFieldData['@context'] && currentFieldData['@type'] && [\n                currentFieldData['@context'],\n                currentFieldData['@type']\n            ].join(slash);\n            currentCaption = getTemplate({\n                selector: Selector.linkedDataCaption\n            });\n\n            if (currentCaption) {\n                currentCaption.setAttribute('itemscope', nothing);\n                itemtype && currentCaption.setAttribute('itemtype', itemtype);\n\n                currentProducerCaptionElements = [\n                    currentFieldData.name && getTemplate({\n                        selector: Selector.linkedDataCaptionElement,\n                        properties: {\n                            innerHTML: currentFieldData.name\n                        },\n                        attributes: {\n                            itemprop: 'name'\n                        }\n                    }),\n                    currentFieldData.description && getTemplate({\n                        selector: Selector.linkedDataCaptionElement,\n                        properties: {\n                            innerHTML: currentFieldData.description\n                        },\n                        attributes: {\n                            itemprop: 'description'\n                        }\n                    }),\n                    currentFieldData.url && getTemplate({\n                        selector: Selector.a,\n                        properties: {\n                            innerHTML: currentFieldData.name || currentFieldData.url\n                        },\n                        attributes: {\n                            itemprop: 'url',\n                            href: currentFieldData.url\n                        }\n                    })\n                ];\n\n                currentProducerCaptionElements.forEach(currentElement => currentElement && currentCaption && currentCaption.appendChild(currentElement));\n\n                caption && caption.appendChild(currentCaption);\n            }\n        }\n    });\n\n    return caption\n}","import {\n    IGetTabLink\n} from './types';\n\nexport default function ({ href, text }: IGetTabLink) {\n    const link = href && text && `<a href=\"${href}\" target=\"_blank\">${text}</a>` || '';\n\n    return link;\n}","import {\n    IGetJsonLdArray,\n    IGetJsonLdArrayGetEntry,\n    StringConstant,\n    regex\n} from './types';\nimport {\n    jsonLdEntryValueType\n} from './config';\nimport getTabLink from './get-tab-link';\nimport getEmailLink from './get-email-link';\n\nconst { requestIdleCallback } = self;\nconst { nothing, slash } = StringConstant;\nconst { leadingAt, remoteUrl, email } = regex;\n\nexport default function (params: IGetJsonLdArray) {return new Promise(async (resolve: (jsonLdArray: string[][]) => void, reject) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => getJsonLdArray(params).then(resolve).catch(reject));\n    } else {\n        setTimeout(() => getJsonLdArray(params).then(resolve).catch(reject), 0);\n    }\n})}\n\nexport async function getJsonLdArray({ jsonLd: currentJsonLd }: IGetJsonLdArray) {\n    const jsonLd = getJsonLd({\n        jsonLd: currentJsonLd\n    });\n    const keys = Object.keys(jsonLd);\n    const entries = await Promise.all(keys.map(key => getEntry({key, value: jsonLd[key]})));\n    const jsonLdArray = [] as string[][];\n\n    entries.forEach(entries => entries.forEach(entry => jsonLdArray.push(entry)));\n\n    return jsonLdArray;\n}\n\nfunction getJsonLd({ jsonLd }: IGetJsonLdArray) {\n    const { _ } = self;\n    const { startCase } = _;\n    const {\n        '@context': context = undefined,\n        '@type': type = undefined\n    } = jsonLd;\n    const typeLinkHref = context && type && [\n        context,\n        type\n    ].join(slash);\n    const typeLinkText = type && startCase(type);\n    const typeLink = getTabLink({\n        href: typeLinkHref,\n        text: typeLinkText\n    });\n\n    if (typeLink) {\n        jsonLd['@type'] = typeLink;\n    }\n\n    return jsonLd;\n}\n\nasync function getEntry({key, value}: IGetJsonLdArrayGetEntry) {\n    const { _ } = self;\n    const { startCase } = _;\n    const entryValue = jsonLdEntryValueType.has(typeof value) && value as string | number | boolean;\n    const valueArray = Array.isArray(value) && value || typeof value === 'object' && [value];\n    const nestedEntries = valueArray && await Promise.all(valueArray.map(jsonLd => getJsonLdArray({ jsonLd })));\n    const entry = [[startCase(key.replace(leadingAt, nothing)), entryValue && (key.match(email) && getEmailLink({href: entryValue.toString(), text: entryValue.toString()}) || getEntryValue(entryValue)) || nothing]];\n\n    nestedEntries && nestedEntries.forEach(nestedEntry => nestedEntry.forEach(currentNestedEntry => entry.push(currentNestedEntry)));\n\n    return entry;\n}\n\nfunction getEntryValue(value: string | number | boolean) {\n    const valueString = value.toString().trim();\n    const linkHref = valueString.match(remoteUrl) && valueString;\n    const linkText = linkHref && valueString && valueString.split(slash).pop();\n    const link = linkHref && linkText && getTabLink({\n        href: linkHref,\n        text: linkText\n    });\n    const entryValue = link || valueString;\n\n    return entryValue;\n}","import {\n    IGetEmailLink\n} from './types';\n\nexport default function ({ href, text }: IGetEmailLink) {\n    const link = href && text && `<a href=\"mailto:${href}\">${text}</a>` || '';\n\n    return link;\n}","import {\n    IDispatchEvent,\n    EventName,\n    Origin\n} from './types';\nimport isWindow from './is-window';\n\nconst eventParams = {\n    bubbles: true\n};\n\nexport default function (params: IDispatchEvent) {\n    isWindow() && postWindowMessage(params);\n}\n\nfunction postWindowMessage({eventName, detail = {}}: IDispatchEvent) {\n    const event = new CustomEvent(eventName, {\n        ...eventParams,\n        detail\n    });\n\n    self.dispatchEvent(event);\n}","import {\n    FetchEvent\n} from './types';\nimport getCache from './get-cache';\n\nexport default async function ({request}: FetchEvent) {\n    const cache = await getCache();\n    const response = await fetch(request);\n    const cacheResponse = response\n        && (response.status === 200 || response.type === 'opaque')\n        && response.clone();\n\n    if (cache && cacheResponse) {\n        await cache.put(request, cacheResponse).catch(handleError);;\n    }\n\n    return response;\n}\n\nfunction handleError(error: Error) {\n    console.warn(error.message);\n}","import {\n    IUpdateRequestCache\n} from './types';\nimport getCache from './get-cache';\n\nexport default async function ({request}: IUpdateRequestCache) {\n    const cache = await getCache();\n    const response = await fetch(request).catch(handleError);\n    const updateCache = response\n        && (response.status === 200 || response.type === 'opaque');\n\n    if (cache && updateCache && response) {\n        await cache.put(request, response).catch(handleError);\n    }\n}\n\nfunction handleError(error: Error) {\n    console.warn(error.message);\n}","import {\n    FetchEvent\n} from './types';\nimport getCache from './get-cache';\nimport updateRequestCache from './update-request-cache';\n\nexport default async function ({request}: FetchEvent) {\n    const cache = await getCache();\n    const response = cache && await cache.match(request);\n\n    if (response) {\n        updateRequestCache({request});\n    }\n\n    return response;\n}","import {\n    FetchEvent\n} from './types';\nimport getFetchResponse from './get-fetch-response';\nimport getCachedFetchResponse from './get-cached-fetch-response';\n\nexport default async function (event: FetchEvent) {\n    const cachedResponse = await getCachedFetchResponse(event);\n    const response = cachedResponse || await getFetchResponse(event);\n\n    return response;\n}","import {\n    ISupport,\n    MessageAction\n} from './types';\nimport {\n    workerDependencies\n} from './config';\nimport isServiceWorker from './is-service-worker';\nimport sendMessage from './send-message';\n\nexport default function (event: Event) {\n    isServiceWorker() && handleServiceWorkerActivation(event);\n}\n\nasync function handleServiceWorkerActivation(event: Event) {\n    const { importScripts } = self;\n    const { VamtigerBrowserMethod } = self;\n    const { support, environment } = VamtigerBrowserMethod;\n    const { indexedDbIsAccessible } = (support || {}) as ISupport;\n    const params = indexedDbIsAccessible && support && {\n        environment,\n        ...support\n    } || {};\n    const message = {\n        action: MessageAction.saveSupport,\n        params\n    };\n\n    sendMessage(message);\n\n    importScripts && workerDependencies.forEach(dependency => importScripts(dependency));\n}","import {\n    FetchEvent\n} from './types';\nimport isServiceWorker from './is-service-worker';\nimport handleFetchRequest from './handle-fetch-request';\nimport handleServiceWorkerActivation from './handle-service-worker-activation';\nimport handeMessage from './handle-message';\n\nexport default function () {\n    isServiceWorker() && setupServiceWorker();\n}\n\nasync function setupServiceWorker() {\n    addEventListener('install', handleServiceWorkerActivation);\n\n    addEventListener('activate', handleServiceWorkerActivation);\n\n    addEventListener('message', handeMessage);\n\n    addEventListener('fetch', event => handleFetchRequest(event as FetchEvent));\n}","import {\n    EventName,\n    ILoadMethod\n} from './types';\nimport loadScript from './load-script';\nimport loadScripts from './load-scripts';\nimport loadScriptsSequentially from './load-scripts-sequentially';\nimport loadShadowStylesheet from './load-shadow-stylesheet';\nimport defineCustomElement from './define-custom-element';\nimport pause from './pause';\nimport getElement from './get-element';\nimport getData from './get-data';\nimport getEnvironment from './get-environment';\nimport setupWindow from './setup-window';\nimport setupWorker from './setup-worker';\nimport setSupport from './set-support';\nimport getMicrodataCaption from './get-microdata-caption';\nimport getJsonLdArray from './get-json-ld-array';\nimport loadDependencies from './load-dependencies';\nimport dispatchEvent from './dispatch-event';\nimport setupServiceWorker from './setup-service-worker';\nimport loadMethod from './load-method';\n\nconst { VamtigerBrowserMethod } = self;\nconst environment = getEnvironment();\nconst vamtigerBrowserMethod = {\n    loadScript,\n    loadScripts,\n    loadScriptsSequentially,\n    loadMethod: async (params: ILoadMethod) => Boolean(await loadMethod(params)),\n    loadShadowStylesheet,\n    defineCustomElement,\n    pause,\n    getElement,\n    getData,\n    getEnvironment,\n    environment,\n    queue: new Map(),\n    messageQueue: new Map(),\n    getMicrodataCaption,\n    getJsonLdArray,\n    method: {}\n};\n\nif (!VamtigerBrowserMethod) {\n    self.VamtigerBrowserMethod = vamtigerBrowserMethod;\n\n    Promise\n        .resolve(() => setupServiceWorker())\n        .then(loadDependencies)\n        .then(() => Promise.all([\n            setSupport(),\n            setupWindow(),\n            setupWorker()\n        ]))\n        .then(() => dispatchEvent({eventName: EventName.vamtigerBrowserMethodReady}))\n        .catch(handleError);\n}\n\nfunction handleError(error: Error) {\n    console.error(error);\n    throw error;\n}","import { LoadScriptsParams, LoadedScripts } from './types';\nimport loadScript from './load-script';\n\nexport default function <P extends LoadScriptsParams>(params: P) {\n    const scripts = Promise.all(params.map(loadScript)) as Promise<LoadedScripts<P>>;\n\n    return scripts\n}","import { LoadScriptsSequentiallyParams, LoadedScriptsSequentially, LoadScriptParams } from './types';\nimport loadScript from './load-script';\n\nexport default <P extends LoadScriptParams[][]>(params: P) => new Promise((resolve: (scripts: LoadedScriptsSequentially<P>) => void, reject) => {\n    let scripts = new Set();\n    let load = Promise.resolve();\n\n    params.forEach(scriptParams => {\n        load = load\n            .then(async () => await Promise.all(scriptParams.map(loadScript)))\n            .then(loadedScripts => loadedScripts.forEach(script => scripts.add(script)))\n    });\n\n    load = load.then(() => resolve(Array.from(scripts) as LoadedScriptsSequentially<P>));\n\n    return load;\n});","import {\n    ILoadShadowStylesheet,\n    Selector\n} from './types';\n\nexport default function ({ css, element }: ILoadShadowStylesheet) {\n    const {\n        shadowRoot,\n        localName: hostName\n    } = element;\n    const lastStylesheet = shadowRoot && shadowRoot.querySelector(Selector.lastStylesheet);\n    const stylesheet = shadowRoot && document.createElement('style');\n\n    if (stylesheet && shadowRoot) {\n        stylesheet.innerHTML = css;\n\n        if (lastStylesheet && lastStylesheet.nextElementSibling) {\n            shadowRoot.insertBefore(stylesheet, lastStylesheet.nextElementSibling);\n        } else {\n            shadowRoot.appendChild(stylesheet);\n        }\n    }\n}","import {\n    getDependencies\n} from './config';\nimport loadScript from './load-script';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\nimport isSeriveWorker from './is-service-worker';\n\nexport default async function () {\n    if (isWindow()) {\n        await loadDependenciesWindow();\n    } else if (isWorker() || isSeriveWorker) {\n        await loadDependenciesWorker();\n    }\n}\n\nasync function loadDependenciesWindow() {\n    const workerDependency = true;\n    const dependencies = getDependencies();\n\n    await Promise.all(dependencies.map(src => loadScript({name: src, src, workerDependency})));\n}\n\nasync function loadDependenciesWorker() {\n    const { importScripts } = self;\n    const dependencies = getDependencies();\n\n    importScripts && await Promise.all(dependencies.map(url => importScripts(url)));\n}"],"names":["__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","factory","root","global","self","this","createExporter","exports","previous","Object","create","defineProperty","value","__esModule","id","v","define","amd","module","exporter","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","assign","t","s","i","n","arguments","length","call","e","indexOf","getOwnPropertySymbols","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","pop","push","m","o","ar","error","concat","asyncIterator","q","a","resume","fulfill","settle","shift","cooked","raw","mod","k","default","Environment","CacheName","EventName","TimeoutDuration","MessageQueueName","Prefix","ElementId","Origin","HostName","LocalHostRelativePath","ScriptType","ScriptAttribute","DataAttribute","ErrorMessage","StringConstant","TagName","LinkRel","LoadScriptElement","Selector","TextModeElementName","MetaElementName","WorkerType","ScriptNameSuffix","ScriptName","MessageAction","CustomEventName","HandleJsonLdAction","DbName","DbStoreName","DbMode","DbKeyPath","Dependency","regex","showRootHost","dash","RegExp","space","nonWord","backTicks","remoteUrl","jsJsonJs","jsonJs","trailingJs","uppercase","leadingAt","email","trailingHtml","textModeElement","keys","map","join","pipe","selector","redundantScripts","vamtigerBrowserMethodJsonJs","vamtigerBrowserMethodJson","vamtigerBrowserMethod","transpiledJs","comma","sendMessageFromWorker","postMessage","getPostMessage","nothing","requestIdleCallback","loadElementQueryCss","_a","css","_b","currentStylesheetName","_c","hostName","camelCase","metaElement","properties","_d","dataset","_e","attributes","head","lastMetaElement","querySelector","attributeKeys","existingMetaElement","window","newMetaElment","document","createElement","nextElementSibling","insertBefore","appendChild","forEach","hasAttribute","setAttribute","dataKey","getMetaElment","stylesheetName","elementQueryCss","replace","EQCSS","register","parse","babel","presets","jsonLdEntryValueType","Set","getDependencies","lodash","filter","dependency","intersectionObserver","rootMargin","threshold","fill","undefined","index","serviceWorker","scope","serviceWorkerClients","includeUncontrolled","workerDependencies","handleError","console","warn","message","stack","Window","DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","params","isServiceWorker","type","config","baseConfig","clients","matchAll","getClients","stringify","textEncoder","TextEncoder","workerType","VamtigerBrowserMethod","worker","textEncoderSupport","stringMessage","encode","isWindow","all","controller","isWorker","getServiceWorkerClients","client","sendMessageFromServiceWorker","innerHTML","isJson","prefix","parent","removeScripts","removeRedundantScripts","sendMessage","action","sendRemoveRedundantScriptsMessage","removeScriptsFromParent","setTimeout","scripts","from","querySelectorAll","jsScripts","js","jsonScripts","json","script","isJsonScript","jsonLdScripts","jsonld","safeScripts","time","Date","getTime","jsonScriptName","jsonScriptSelector","jsonLdScriptName","jsonLdScriptSelector","name","jsonLd","removedScripts","Number","toString","removeChild","failedToLoadScript","stylesheet","scriptElement","link","style","slash","loadScript","handleLoad","removeEventListeners","removeFromDom","src","match","workerDependency","paths","split","scriptName","jsJsonJsScript","text","removeScriptSelector","catch","loadJsJsonJs","handleLoadError","event","Error","removeEventListener","url","fetch","Babel","transform","response","code","trim","getTranspiledJs","href","remoteScript","element","existingScript","HTMLScriptElement","HTMLLinkElement","rel","HTMLStyleElement","addEventListener","dbName","storeName","mode","dbRequest","indexedDB","open","db","objectStoreNames","contains","createObjectStore","keyPath","transaction","store","objectStore","data","messageId","getDbParams","save","put","handleSuccess","get","getAll","loadScriptWindow","removeExisting","ignore","error_1","semiColon","support","workerSupport","textMode","customElementMetaElement","indexedDbIsAccessible","getTextModeCss","getData","customElementNames","names","getCss","getTextModeCssWindowIndexDb","customElementNameMetaElement","children","getTextModeCssWorker","htmlTextMode","cssBody","saveCustomElementName","saveParams","saveCustomElementNameWindowIndexDb","newMetaElement","saveCustomElementNameWindow","successAction","saveCustomElementNameIndexDb","saveCustomElementNameWorker","unsupportedFeature","loadStylesheets","container","styles","content","stylesheets","styleElements","noElementName","noTemplate","noElementForSelector","noElementSelector","noTemplateUrl","noTemplateForUrl","getElement","template","loadContainerStylesheets","getElementFromUrl","firstElementChild","getElementFromTemplate","timeout","queue","currentQueue","queueEntry","has","set","add","delete","size","handleExpiredQueueEntry","messageQueue","keyRegex","queueKey","find","jsonLdSelector","jsonSelector","jsonScript","dequeueParams","getWebComponentDataWindowWorker","getWebComponentData","dequeue","getWebComponentDataWindow","getWebComponentDataWorker","webComponent","getSelector","saveWebComponentData","saveWebComponentDataIndexDb","saveWebComponentDataWindow","getWebComponentDataMessage","removeRedundantScriptsMessage","saveWebComponentDataWorker","created","emptyJsonLd","loadJsonJsonLd","jsonLdScript","isArray","getJsonJsonLd","jsonJsonLdData","removeScriptParams","currentJsonJsonLdData","currentJsonLd","loadWebComponentData","fields","currentUrls","urls","getJsonLd","fieldData","getFieldData","saveJsonLdWindow","currentParams","handleJsonFromUrlWindow","queueParams","webComponentData","loadJsonFromUrl","getJsonFromUrl","getJsonData","loadScriptParams","noJsonLdParameter","unknown","ignoreMessage","textDecoder","TextDecoder","ports","messageData","Uint8Array","decode","getMessageData","environment","saveSupport","serviceWorkerSupport","saveSupportDataIndexDb","saveSupportDataWindow","saveSupportDataWorker","cacheName","caches","localStorage","resolved","indexDbIsAccessible","indexDbAccessible","getCache","cache","Boolean","indexedDb","sharedWorker","setWorkerSupport","sendWorkerSupport","logMessage","loadMethodWindow","importScripts","updateMethodMessage","method","updateMethod","loadMethodWorker","relativeUrl","scriptLoadError","origin","loadMethod","vamtigerBrowserMethodLoadedMethod","getMethodResultWindow","namedMethod","getMethodResultWorker","messageIdWindow","messageIdWorker","messageIdServiceWorker","messageIdUnknownEnvironment","getMethodResult","updateMethodWindow","importDependenciesWindow","dependencyUrlMetaElement","urlMetaElement","sendMessge","importDependencies","removeDependencyUrlWindow","log","removeDependencyUrl","actionName","currentAction","location","localHost","hostname","ok","newline","getLocalHostWorkerUrl","localHostWorkerUrl","createObjectURL","workderScript","workerScripts","workderDependency","repeat","workerBlob","Blob","workerUrl","currentWorker","Worker","handleMessage","IntersectionObserver","defaultObserver","entries","observer","entry","handleIntersectElement","isIntersecting","intersectionRatio","visible","navigator","relativePath","urlPaths","pageUrl","slice","secondaryUrl","secondaryConfig","sharedWorkerRegistration","getServiceWorker","actionMethod","detail","getAction","getParams","metaElementHtml","defaultOrigin","vamtigerBrowserMethodScript","originPaths","firstMetaElement","customeElementMetaElement","getServiceWorkerRegistration","serviceWorkerRegistration","messageChannel","MessageChannel","port1","customElementName","getWorker","handleJsonLd","setupWindow","templateHtml","attributesKeys","templateElement","currentTemplate","cloneNode","getJsonLdArray","startCase","context","typeLinkHref","typeLinkText","typeLink","getTabLink","entryValue","valueArray","nestedEntries","valueString","linkHref","linkText","getEntryValue","nestedEntry","currentNestedEntry","getEntry","jsonLdArray","eventParams","bubbles","eventName","CustomEvent","dispatchEvent","request","updateCache","status","updateRequestCache","getCachedFetchResponse","cachedResponse","cacheResponse","clone","getFetchResponse","handleServiceWorkerActivation","handeMessage","handleFetchRequest","setupServiceWorker","loadScripts","loadScriptsSequentially","load","scriptParams","loadedScripts","loadShadowStylesheet","shadowRoot","lastStylesheet","defineCustomElement","customElements","existingElement","pause","milliseconds","jsonLdParams","jsonParams","getJson","getEnvironment","Map","getMicrodataCaption","itemtype","currentCaption","imageData","fieldKey","field","caption","getTemplate","linkedDataCaption","itemprop","currentFieldData","linkedDataCaptionElement","description","currentElement","dependencies","loadDependenciesWindow","isSeriveWorker","loadDependenciesWorker","setSupport","setupWorker","vamtigerBrowserMethodReady"],"mappings":"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"}