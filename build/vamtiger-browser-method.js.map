{"version":3,"file":"vamtiger-browser-method.js","sources":["../source/types.ts","../source/get-meta-element.ts","../source/get-camel-case.ts","../source/load-element-query-css.ts","../source/load-script.ts","../source/define-custom-element.ts","../source/pause.ts","../source/get-element-from-template.ts","../source/get-element-from-url.ts","../source/vamtiger-browser-method.ts","../source/load-scripts.ts","../source/load-scripts-sequentially.ts","../source/load-shadow-stylesheet.ts","../source/get-element.ts"],"sourcesContent":["import * as tslib from '../node_modules/tslib/tslib';\nimport defineCustomElement from './define-custom-element';\n\nexport enum ScriptType {\n    jsonld = 'application/ld+json'\n}\n\nexport enum ScriptAttribute {\n    type = 'type'\n}\n\nexport enum DataAttribute {\n    vamtigerElementQuery = 'vamtigerLoadElementQueryCss',\n    elementQueryCssLoaded = 'elementQueryCssLoaded'\n}\n\nexport enum ErrorMessage {\n    failedToLoadScript = 'Failed to load script',\n    windowPropertyNotSet = 'Window property not set',\n    unsupportedFeature = 'Unsupported feature',\n    customElementAreadyDefined = 'Custom element already defined',\n    noElementName = 'No Element Name',\n    noTemplateUrl = 'No Template URL',\n    noElementSelector = 'No Template Selector',\n    noTemplateForUrl = 'No Template for URL',\n    noTemplate = 'No Template',\n    noElementForSelector = 'No Element for Selector'\n}\n\nexport enum StringConstant {\n    nothing = '',\n    slash = '/',\n    dash = '-'\n}\n\nexport enum TagName {\n    div = 'div'\n}\n\nexport enum LinkRel {\n    stylesheet = 'stylesheet'\n}\n\nexport enum LoadScriptElement {\n    script = 'script',\n    link = 'link',\n    style = 'style'\n}\n\nexport enum Selector {\n    lastStylesheet = 'style:last-of-type',\n    lastMetaElement = 'head > meta:last-of-type',\n    webcomponentsjs = 'script[src*=\"@webcomponents\\/webcomponentsjs\"]'\n}\n\nexport enum  MetaElementName {\n    loadElementQueryCss = 'vamtiger-load-element-query-css'\n}\n\nexport interface ILoadRemoteScriptParams {\n    src: string;\n}\n\nexport interface ILoadRemoteStylesheetScriptParams {\n    href: string;\n}\n\nexport interface ILoadLocalScriptParams {\n    name: string;\n    removeFromDom?: boolean;\n}\n\nexport interface ILoadScriptParams {\n    js: string;\n    jsonld?: boolean;\n}\n\nexport interface ILoadStylesheetScriptParams {\n    css: string;\n}\n\nexport interface ILoadScript {\n    params: LocalScriptParams\n        | LocalStylesheetScriptParams\n        | ILoadRemoteScriptParams\n        | ILoadRemoteStylesheetScriptParams;\n    reject: (error: Error) => void\n}\n\nexport interface ILoadShadowStylesheet {\n    css: string;\n    element: HTMLElement;\n}\n\nexport interface IDefineCustomElement {\n    name: string;\n    constructor: {\n        new (): HTMLElement\n        prototype: HTMLElement;\n    };\n    ignore?: boolean;\n}\n\nexport interface IPause {\n    milliseconds: number;\n}\n\nexport interface IGetElementBase {\n    name: string;\n}\n\nexport interface IGetElementTemplate extends IGetElementBase {\n    template: string;\n}\n\nexport interface IGetElementUrl extends IGetElementBase {\n    url: string;\n    selector:  string;\n}\n\nexport interface IAnyObject {\n    [key: string]: any;\n}\n\nexport interface ILoadElementQueryCss {\n    css: string;\n    stylesheetName?: string;\n    hostName?: string;\n}\n\nexport interface IGetMetaElement {\n    selector?: string;\n    properties?: {\n        id?: string;\n    };\n    attributes?: {\n        [key: string]: string;\n    };\n    dataset?: DOMStringMap;\n}\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type LocalScriptParams = ILoadLocalScriptParams & ILoadScriptParams;\n\nexport type LocalStylesheetScriptParams = ILoadLocalScriptParams & ILoadStylesheetScriptParams;\n\nexport type LoadScriptParams = LocalScriptParams\n    | LocalStylesheetScriptParams\n    | ILoadRemoteScriptParams\n    | ILoadRemoteStylesheetScriptParams;\n\nexport type LoadScriptsParams = LoadScriptParams[];\n\nexport type LoadScriptsSequentiallyParams = LoadScriptsParams[];\n\nexport type LoadedScript<P extends ILoadScript['params']> =\n    P extends ILoadScriptParams ? HTMLScriptElement :\n    P extends ILoadStylesheetScriptParams ? HTMLStyleElement :\n    P extends ILoadRemoteScriptParams ? HTMLScriptElement :\n    P extends ILoadRemoteStylesheetScriptParams ? HTMLLinkElement :\n    never;\n\nexport type LoadedScripts<P extends LoadScriptsParams> =\n    P extends ILoadScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[] ? HTMLLinkElement[] :\n    never;\n\nexport type LoadedScriptsSequentially<P extends LoadScriptsSequentiallyParams> =\n    P extends ILoadScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[][] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[][] ? HTMLLinkElement[] :\n    never;\n\nexport type GetElementParams = IGetElementTemplate | IGetElementUrl;\n\ndeclare global {\n    interface Window extends TsLib {\n        VamtigerBrowserMethod: {\n            loadScript: <P extends ILoadScript['params']>(params: P) => Promise<LoadedScript<P>>;\n            loadScripts: <P extends LoadScriptsParams>(params: P) => Promise<LoadedScripts<P>>;\n            loadScriptsSequentially: <P extends LoadScriptsSequentiallyParams>(params: P) => Promise<LoadedScriptsSequentially<P>>;\n            loadShadowStylesheet: (params: ILoadShadowStylesheet) => void;\n            defineCustomElement: (params: IDefineCustomElement) => void;\n            getElement: (params: GetElementParams) => Promise<HTMLElement>;\n            pause: (params: IPause) => Promise<{}>;\n        }\n        EQCSS: IAnyObject;\n    }\n\n    namespace NodeJS {\n        interface  Global {\n            VamtigerBrowserMethod: Window['VamtigerBrowserMethod'];\n        }\n    }\n}\n\nexport const regex = {\n    showRootHost: /:{1,2}host/gm,\n    dash: new RegExp(StringConstant.dash, 'g'),\n    space: /\\s/g,\n    nonWord: /\\W+/g\n}","import {\n    IGetMetaElement,\n    StringConstant,\n    Selector\n} from './types';\n\nconst { nothing } = StringConstant;\n\nexport default function ({ selector = nothing, properties = {}, dataset = {}, attributes = {}}: IGetMetaElement) {\n    const { id } = properties;\n    const { head } = document;\n    const lastMetaElement = head.querySelector<HTMLMetaElement>(Selector.lastMetaElement);\n    const attributeKeys = Object.keys(attributes);\n    const existingMetaElement = id && ((window as any)[id]\n        || selector && head.querySelector(selector)) as HTMLMetaElement;\n    const newMetaElment = !existingMetaElement && document.createElement('meta');\n    const metaElement = (existingMetaElement || newMetaElment) as HTMLMetaElement;\n\n    let dataKey: string;\n\n    if (newMetaElment) {\n        Object.assign(newMetaElment, properties);\n        Object.assign(newMetaElment.dataset, dataset);\n\n        if (lastMetaElement && lastMetaElement.nextElementSibling) {\n            head.insertBefore(\n                newMetaElment,\n                lastMetaElement.nextElementSibling\n            );\n        } else {\n            head.appendChild(newMetaElment);\n        }\n    }\n\n    attributeKeys.forEach(key => !metaElement.hasAttribute(key) && metaElement.setAttribute(dataKey, attributes[key]));\n\n    return metaElement;\n}","import {\n    regex,\n    StringConstant\n} from './types';\n\nconst { nothing } = StringConstant;\nconst { nonWord } = regex;\n\nexport default (input: string) => input\n    .split(nonWord)\n    .map((word, index) => !index && word.toLowerCase() || word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase())\n    .join(nothing);","import {\n    ILoadElementQueryCss,\n    MetaElementName,\n    StringConstant,\n    regex\n} from './types';\nimport getMetaElment from './get-meta-element';\nimport getCamelCase from './get-camel-case';\n\nconst { showRootHost } = regex;\nconst { nothing } = StringConstant;\n\nexport default function({ css, stylesheetName: currentStylesheetName = nothing, hostName = nothing }: ILoadElementQueryCss) {\n    const metaElement = getMetaElment({\n        properties: {\n            id: MetaElementName.loadElementQueryCss\n        }\n    });\n    const stylesheetName = getCamelCase(currentStylesheetName);\n    const { dataset } = metaElement;\n    const elementQueryCss = !dataset.hasOwnProperty(hostName) && (hostName && css.replace(showRootHost, hostName)) || css;\n    const { EQCSS } = window;\n\n    if (elementQueryCss && EQCSS) {\n        EQCSS.register(EQCSS.parse(elementQueryCss));\n\n        if (stylesheetName) {\n            dataset[stylesheetName] = nothing;\n        } else if (hostName) {\n            dataset[hostName] = nothing;\n        }\n    }\n}","import {\n    ILoadScript,\n    ErrorMessage,\n    LocalScriptParams,\n    LocalStylesheetScriptParams,\n    ILoadRemoteStylesheetScriptParams,\n    ILoadRemoteScriptParams,\n    LoadScriptElement,\n    LoadedScript,\n    LinkRel,\n    ScriptAttribute,\n    ScriptType\n} from './types';\nimport loadElementQueryCss from './load-element-query-css';\n\nconst { failedToLoadScript } = ErrorMessage;\nconst { stylesheet } = LinkRel;\nconst { script: scriptElement, link, style } = LoadScriptElement;\n\nexport default <P extends ILoadScript['params']>(params: P) => new Promise((resolve: (script: LoadedScript<P>) => void, reject: ILoadScript['reject']) => {\n    const { head, body } = document;\n    const { js, name: scriptName, jsonld, removeFromDom } = params as LocalScriptParams;\n    const { src } = params as ILoadRemoteScriptParams;\n    const { css, name: stylesheetName } = params as LocalStylesheetScriptParams;\n    const { href } = params as ILoadRemoteStylesheetScriptParams;\n    const remoteScript = params.hasOwnProperty('src') || params.hasOwnProperty('href');\n    const element = (js || src) && scriptElement\n        || css && style\n        || href && link;\n    const selector = src && `script[src=\"${src}\"]`\n        || href && `link[href=\"${href}\"]`\n        || js && scriptName && `script[data-name=\"${scriptName}\"]`\n        || css && stylesheetName && `style[data-name=\"${stylesheetName}\"]`;\n    const existingScript = (head.querySelector(selector) || body.querySelector(selector)) as LoadedScript<P>;\n    const script = selector\n        && element\n        && document.createElement(element) as LoadedScript<P>;\n\n    if (script instanceof HTMLScriptElement) {\n        if (src) {\n            script.src = src;\n        } else if (js) {\n            script.innerHTML = js;\n            script.dataset.name = scriptName;\n\n            if (jsonld) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.jsonld);\n            }\n        }\n    } else if (script instanceof HTMLLinkElement) {\n        script.rel = stylesheet;\n        script.href = href;\n    } else if (script instanceof HTMLStyleElement) {\n        script.innerHTML = css;\n        script.dataset.name = stylesheetName;\n\n        loadElementQueryCss({\n            css,\n            stylesheetName\n        });\n    }\n\n    if (existingScript) {\n        resolve(existingScript);\n    } else if (script) {\n        script.addEventListener('load', handleLoad);\n        script.addEventListener('error', handleLoadError);\n\n        head.appendChild(script);\n\n        if (!remoteScript) {\n            handleLoad();\n        }\n    }\n\n    function handleLoad() {\n        if (script) {\n            removeEventListeners();\n\n            if (removeFromDom) {\n                head.removeChild(script);\n            }\n\n            resolve(script);\n        }\n    }\n\n    function handleLoadError(event: Event) {\n        removeEventListeners();\n\n        console.error(event);\n\n        reject(new Error(`${failedToLoadScript}`));\n    }\n\n    function removeEventListeners() {\n        if (script) {\n            script.removeEventListener('load', handleLoad);\n            script.removeEventListener('error', handleLoadError);\n        }\n    }\n});\n","import { IDefineCustomElement, ErrorMessage } from './types';\n\nconst { unsupportedFeature, customElementAreadyDefined } = ErrorMessage;\n\nexport default function defineCustomElement({ name, constructor, ignore }: IDefineCustomElement) {\n    const { customElements } = window;\n    const define = customElements && customElements.define;\n    const existingElement = define && customElements.get && customElements.get(name);\n\n    if (define && !existingElement) {\n        customElements.define(name, constructor);\n    } else if (existingElement) {\n        throw new Error(`${customElementAreadyDefined}: ${name}`);\n    } else if (!ignore) {\n        defineCustomElement({ name, constructor, ignore: true });\n    } else {\n        throw new Error(`${unsupportedFeature}: Custom Elements - ${name}`);\n    }\n}","import { IPause } from './types';\n\nexport default ({ milliseconds = 1000 }: IPause) => new Promise((resolve, reject) => setTimeout(resolve, milliseconds));","import {\n    IGetElementTemplate,\n    TagName,\n    ErrorMessage\n} from './types';\n\nconst { div } = TagName;\nconst {\n    noElementName,\n    noTemplate,\n    noElementForSelector\n} = ErrorMessage;\n\nexport default function ({ name, template }: IGetElementTemplate) {\n    const container = name && template && document.createElement(div);\n\n    let element: HTMLElement | null = null;\n\n    if (!name) {\n        throw new Error(noElementName);\n    } else if (!template) {\n        throw new Error(noTemplate);\n    }\n\n    if (container) {\n        container.innerHTML = template;\n\n        element = container.firstElementChild as HTMLElement;\n    }\n\n    if (!element) {\n        throw new Error(noElementForSelector);\n    }\n\n    element.dataset.name = name;\n\n    return element;\n}","import {\n    IGetElementUrl,\n    TagName,\n    ErrorMessage\n} from './types';\n\nconst { div } = TagName;\nconst {\n    noElementName,\n    noElementSelector,\n    noTemplateUrl,\n    noTemplateForUrl,\n    noElementForSelector\n} = ErrorMessage;\n\nexport default async function ({ name, url, selector }: IGetElementUrl) {\n    const template = name && selector && url && await fetch(url)\n        .then(response => response.text());\n    const container = template && document.createElement(div);\n\n    let element: HTMLElement | null = null;\n\n    if (!name) {\n        throw new Error(noElementName);\n    } else if (!selector) {\n        throw new Error(noElementSelector);\n    } else if (!url) {\n        throw new Error(noTemplateUrl);\n    } else if (!template) {\n        throw new Error(noTemplateForUrl);\n    }\n\n    if (container) {\n        container.innerHTML = template;\n\n        element = container.querySelector<HTMLElement>(selector);\n    }\n\n    if (!element) {\n        throw new Error(noElementForSelector);\n    }\n\n    element.setAttribute('dataset-name', name);\n\n    return element;\n}\n","import loadScript from './load-script';\nimport loadScripts from './load-scripts';\nimport loadScriptsSequentially from './load-scripts-sequentially';\nimport loadShadowStylesheet from './load-shadow-stylesheet';\nimport defineCustomElement from './define-custom-element';\nimport pause from './pause';\nimport getElement from './get-element';\n\nconst { VamtigerBrowserMethod } = window;\nconst vamtigerBrowserMethod = {\n    loadScript,\n    loadScripts,\n    loadScriptsSequentially,\n    loadShadowStylesheet,\n    defineCustomElement,\n    pause,\n    getElement\n};\n\ntry {\n    if (!VamtigerBrowserMethod) {\n        window.VamtigerBrowserMethod = vamtigerBrowserMethod;\n    }\n} catch(error) {\n    global.VamtigerBrowserMethod = VamtigerBrowserMethod;\n}","import { LoadScriptsParams, LoadedScripts } from './types';\nimport loadScript from './load-script';\n\nexport default function <P extends LoadScriptsParams>(params: P) {\n    const scripts = Promise.all(params.map(loadScript)) as Promise<LoadedScripts<P>>;\n\n    return scripts\n}","import { LoadScriptsSequentiallyParams, LoadedScriptsSequentially, LoadScriptParams } from './types';\nimport loadScript from './load-script';\n\nexport default <P extends LoadScriptParams[][]>(params: P) => new Promise((resolve: (scripts: LoadedScriptsSequentially<P>) => void, reject) => {\n    let scripts = new Set();\n    let load = Promise.resolve();\n\n    params.forEach(scriptParams => {\n        load = load\n            .then(async () => await Promise.all(scriptParams.map(loadScript)))\n            .then(loadedScripts => loadedScripts.forEach(script => scripts.add(script)))\n    });\n\n    load = load.then(() => resolve(Array.from(scripts) as LoadedScriptsSequentially<P>));\n\n    return load;\n});","import {\n    ILoadShadowStylesheet,\n    Selector\n} from './types';\nimport loadElementQueryCss from './load-element-query-css';\n\nexport default function ({ css, element }: ILoadShadowStylesheet) {\n    const {\n        shadowRoot,\n        localName: hostName\n    } = element;\n    const lastStylesheet = shadowRoot && shadowRoot.querySelector(Selector.lastStylesheet);\n    const stylesheet = shadowRoot && document.createElement('style');\n\n    if (stylesheet && shadowRoot) {\n        stylesheet.innerHTML = css;\n\n        if (lastStylesheet && lastStylesheet.nextElementSibling) {\n            shadowRoot.insertBefore(stylesheet, lastStylesheet.nextElementSibling);\n        } else {\n            shadowRoot.appendChild(stylesheet);\n        }\n    }\n}","import {\n    GetElementParams,\n    IGetElementTemplate,\n    IGetElementUrl\n} from './types';\nimport getElementFromTemplate from './get-element-from-template';\nimport getElementFromUrl from './get-element-from-url';\n\nexport default async function<P extends GetElementParams>(params: P) {\n    if ((params as IGetElementUrl).url) {\n        return await getElementFromUrl(params as IGetElementUrl);\n    } else {\n        return getElementFromTemplate(params as IGetElementTemplate);\n    }\n}"],"names":["ScriptType","ScriptAttribute","DataAttribute","ErrorMessage","StringConstant","TagName","LinkRel","LoadScriptElement","Selector","MetaElementName","regex","RegExp","dash","nothing","nonWord","input","split","map","word","index","toLowerCase","slice","toUpperCase","join","showRootHost","_a","css","_b","currentStylesheetName","_c","hostName","metaElement","selector","properties","_d","dataset","_e","attributes","id","head","lastMetaElement","querySelector","attributeKeys","Object","keys","existingMetaElement","window","newMetaElment","document","createElement","assign","nextElementSibling","insertBefore","appendChild","forEach","key","hasAttribute","setAttribute","dataKey","getMetaElment","loadElementQueryCss","stylesheetName","getCamelCase","elementQueryCss","hasOwnProperty","replace","EQCSS","register","parse","failedToLoadScript","stylesheet","scriptElement","link","style","params","Promise","resolve","reject","body","js","scriptName","jsonld","removeFromDom","src","href","remoteScript","element","existingScript","script","handleLoad","removeEventListeners","removeChild","handleLoadError","event","console","error","Error","removeEventListener","HTMLScriptElement","innerHTML","name","type","HTMLLinkElement","rel","HTMLStyleElement","addEventListener","unsupportedFeature","customElementAreadyDefined","div","noElementName","noTemplate","noElementForSelector","noElementSelector","noTemplateUrl","noTemplateForUrl","VamtigerBrowserMethod","vamtigerBrowserMethod","loadScript","loadScripts","all","loadScriptsSequentially","scripts","Set","load","scriptParams","then","loadedScripts","add","Array","from","loadShadowStylesheet","shadowRoot","lastStylesheet","defineCustomElement","constructor","ignore","customElements","define","existingElement","get","pause","milliseconds","setTimeout","getElement","url","fetch","response","text","container","template","getElementFromUrl","firstElementChild","getElementFromTemplate","global"],"mappings":"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"}