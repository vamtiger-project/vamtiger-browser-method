{"version":3,"file":"vamtiger-browser-method.js","sources":["../source/types.ts","../source/get-meta-element.ts","../source/get-camel-case.ts","../source/load-element-query-css.ts","../source/load-script.ts","../source/define-custom-element.ts","../source/pause.ts","../source/load-container-stylesheets.ts","../source/get-element-from-template.ts","../source/get-element-from-url.ts","../source/get-element.ts","../source/get-json-ld.ts","../source/get-data.ts","../source/get-environment.ts","../source/get-message-data.ts","../source/is-window.ts","../source/is-worker.ts","../source/remove-redundant-scripts.ts","../source/handle-message.ts","../source/get-local-host-worker-url.ts","../source/is-local-host.ts","../source/get-worker.ts","../source/setup-window.ts","../source/setup-worker.ts","../source/vamtiger-browser-method.ts","../source/load-scripts.ts","../source/load-scripts-sequentially.ts","../source/load-shadow-stylesheet.ts"],"sourcesContent":["import * as tslib from 'tslib/tslib';\nimport { requestIdleCallback } from 'requestidlecallback';\n\nexport enum Environment {\n    window = 'window',\n    worker = 'worker'\n}\n\nexport enum Origin {\n    nowhere = '',\n    everyWhere = '*'\n}\n\nexport enum HostName {\n    localHost = 'localhost'\n}\n\nexport enum LocalHostRelativePath {\n    vamtigerBrowserMethod = 'vamtiger-browser-method.js'\n}\n\nexport enum ScriptType {\n    js = 'text/javascript',\n    json = 'application/json',\n    jsonld = 'application/ld+json'\n}\n\nexport enum ScriptAttribute {\n    type = 'type'\n}\n\nexport enum DataAttribute {\n    vamtigerElementQuery = 'vamtigerLoadElementQueryCss',\n    elementQueryCssLoaded = 'elementQueryCssLoaded'\n}\n\nexport enum ErrorMessage {\n    failedToLoadScript = 'Failed to load script',\n    windowPropertyNotSet = 'Window property not set',\n    unsupportedFeature = 'Unsupported feature',\n    customElementAreadyDefined = 'Custom element already defined',\n    noElementName = 'No Element Name',\n    noTemplateUrl = 'No Template URL',\n    noElementSelector = 'No Template Selector',\n    noTemplateForUrl = 'No Template for URL',\n    noTemplate = 'No Template',\n    noElementForSelector = 'No Element for Selector',\n    noJsonLdParameter = 'No \"jsonLd\" property set'\n}\n\nexport enum StringConstant {\n    nothing = '',\n    slash = '/',\n    dash = '-',\n    pipe = '|',\n    comma = ',',\n    backTick = '`',\n    doubleQuote = '\"'\n}\n\nexport enum TagName {\n    div = 'div',\n    template = 'template'\n}\n\nexport enum LinkRel {\n    stylesheet = 'stylesheet'\n}\n\nexport enum LoadScriptElement {\n    script = 'script',\n    link = 'link',\n    style = 'style'\n}\n\nexport enum Selector {\n    lastStylesheet = 'style:last-of-type',\n    lastMetaElement = 'head > meta:last-of-type',\n    webcomponentsjs = 'script[src*=\"@webcomponents\\/webcomponentsjs\"]',\n    style = 'style',\n    stylesheet = ' link[rel=\"stylesheet\"]',\n    vamtigerBrowserMethodJsonJs = '[src$=\"vamtiger-browser-method.js.json.js\"]',\n    vamtigerBrowserMethodJson = '[data-name$=\"vamtiger-browser-method.js.json\"]',\n    vamtigerBrowserMethod = '[data-name$=\"vamtiger-browser-method.js\"]'\n}\n\nexport enum  MetaElementName {\n    loadElementQueryCss = 'vamtiger-load-element-query-css'\n}\n\nexport enum ScriptNameSuffix {\n    style = 'style',\n    stylesheet = 'stylesheet'\n}\n\nexport enum MessageAction {\n    ignore = 'ignore',\n    removeRedundantScripts = 'removeRedundantScripts'\n}\n\nexport interface ILoadRemoteScriptParams {\n    src: string;\n}\n\nexport interface ILoadRemoteStylesheetScriptParams {\n    href: string;\n}\n\nexport interface ILoadLocalScriptParams {\n    name: string;\n    removeFromDom?: boolean;\n}\n\nexport interface ILoadScriptParams {\n    js: string;\n    jsonld?: boolean;\n}\n\nexport interface ILoadJsonScriptParams {\n    json: string;\n}\n\nexport interface ILoadStylesheetScriptParams {\n    css: string;\n}\n\nexport interface IAnyObject {\n    [key: string]: any;\n}\n\nexport interface IJsonData {\n    jsonLd: IAnyObject[];\n    json?: IAnyObject;\n}\n\nexport interface ILoadScript {\n    params: LocalScriptParams\n        | LocalStylesheetScriptParams\n        | ILoadRemoteScriptParams\n        | ILoadRemoteStylesheetScriptParams\n        | ILoadJsonScriptParams;\n    reject: (error: Error) => void\n}\n\nexport interface ILoadShadowStylesheet {\n    css: string;\n    element: HTMLElement;\n}\n\nexport interface IJsonScriptData {\n    name: string;\n    text: string;\n}\n\nexport interface IDefineCustomElement {\n    name: string;\n    constructor: {\n        new (): HTMLElement\n        prototype: HTMLElement;\n    };\n    ignore?: boolean;\n}\n\nexport interface IPause {\n    milliseconds: number;\n}\n\nexport interface IGetElementBase {\n    name: string;\n    loadStylesheets?: boolean;\n}\n\nexport interface IGetElementTemplate extends IGetElementBase {\n    template: string;\n    selector?: string;\n}\n\nexport interface IGetElementUrl extends IGetElementBase {\n    url: string;\n    selector:  string;\n}\n\nexport interface ILoadElementQueryCss {\n    css: string;\n    stylesheetName?: string;\n    hostName?: string;\n}\n\nexport interface IGetMetaElement {\n    selector?: string;\n    properties?: {\n        id?: string;\n    };\n    attributes?: {\n        [key: string]: string;\n    };\n    dataset?: DOMStringMap;\n}\n\nexport interface ILoadContainerStylesheets {\n    name: string;\n    container: HTMLTemplateElement;\n}\n\nexport interface IGetData {\n    jsonLd: string;\n}\n\nexport interface IGetJsonLd {\n    jsonLd: string;\n}\n\nexport interface IJosnLdImageObject {\n    \"@context\": string;\n    '@type': string;\n    name: string;\n    description: string;\n    author: {\n        '@type': string;\n        givenName: string;\n        familyName: string;\n        email: string;\n    };\n    datePublished: string;\n    contentUrl: string;\n}\n\nexport interface IMessageAction {\n    action: MessageAction;\n    params: any;\n}\n\nexport interface IMessageResponse {\n    data: IMessageAction;\n}\n\nexport interface IRemoveRedundantScripts {\n    selector: string;\n}\n\nexport type MessageResponse = IMessageResponse | undefined;\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type LocalScriptParams = ILoadLocalScriptParams & ILoadScriptParams;\n\nexport type LocalStylesheetScriptParams = ILoadLocalScriptParams & ILoadStylesheetScriptParams;\n\nexport type LoadScriptParams = LocalScriptParams\n    | LocalStylesheetScriptParams\n    | ILoadRemoteScriptParams\n    | ILoadRemoteStylesheetScriptParams;\n\nexport type LoadScriptsParams = LoadScriptParams[];\n\nexport type LoadScriptsSequentiallyParams = LoadScriptsParams[];\n\nexport type LoadedScript<P extends ILoadScript['params']> =\n    P extends ILoadScriptParams ? HTMLScriptElement :\n    P extends ILoadStylesheetScriptParams ? HTMLStyleElement :\n    P extends ILoadRemoteScriptParams ? HTMLScriptElement :\n    P extends ILoadRemoteStylesheetScriptParams ? HTMLLinkElement :\n    never;\n\nexport type LoadedScripts<P extends LoadScriptsParams> =\n    P extends ILoadScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[] ? HTMLLinkElement[] :\n    never;\n\nexport type LoadedScriptsSequentially<P extends LoadScriptsSequentiallyParams> =\n    P extends ILoadScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[][] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[][] ? HTMLLinkElement[] :\n    never;\n\nexport type GetElementParams = IGetElementTemplate | IGetElementUrl;\n\nexport type VamtigerBrowserMethod = {\n    loadScript: <P extends LocalScriptParams | LocalStylesheetScriptParams | ILoadRemoteScriptParams | ILoadRemoteStylesheetScriptParams>(params: P) => Promise<LoadedScript<P>>;\n    loadScripts: <P extends LoadScriptParams[]>(params: P) => Promise<LoadedScripts<P>>;\n    loadScriptsSequentially: <P extends LoadScriptParams[][]>(params: P) => Promise<LoadedScriptsSequentially<P>>;\n    loadShadowStylesheet: ({ css, element }: ILoadShadowStylesheet) => void;\n    defineCustomElement: ({ name, constructor, ignore }: IDefineCustomElement) => void;\n    pause: ({ milliseconds }: IPause) => Promise<{}>;\n    getElement: <P extends GetElementParams>(params: P) => Promise<HTMLElement>;\n    getData: ({ jsonLd }: IGetData) => Promise<IJsonData>;\n    getEnvironment: () => Environment;\n    envrironment: Environment;\n    worker?: Worker;\n};\n\nexport type JsonDataResolve = (data: IJsonData) => void;\n\nexport type WorkerPostMessage = (message: IAnyObject) => void;\n\ndeclare global {\n    interface Window extends TsLib {\n        VamtigerBrowserMethod: VamtigerBrowserMethod;\n        EQCSS: IAnyObject;\n        requestIdleCallback?: typeof requestIdleCallback\n    }\n\n    namespace NodeJS {\n        interface  Global {\n            VamtigerBrowserMethod: Window['VamtigerBrowserMethod'];\n        }\n    }\n}\n\nexport const regex = {\n    showRootHost: /:{1,2}host/gm,\n    dash: new RegExp(StringConstant.dash, 'g'),\n    space: /\\s/g,\n    nonWord: /\\W+/g,\n    backTicks: /`/gm\n}\n\nexport const selector = {\n    worker: [\n        Selector.vamtigerBrowserMethod\n    ].join(StringConstant.comma),\n    redundantScripts: [\n        Selector.vamtigerBrowserMethodJsonJs,\n        Selector.vamtigerBrowserMethodJson,\n        Selector.vamtigerBrowserMethod\n    ].join(StringConstant.comma)\n}\n\nexport const sendMessageFromWorker = postMessage as WorkerPostMessage;\n\nexport function ignore(params?: any) {}","import {\n    IGetMetaElement,\n    StringConstant,\n    Selector\n} from './types';\n\nconst { nothing } = StringConstant;\n\nexport default function ({ selector = nothing, properties = {}, dataset = {}, attributes = {}}: IGetMetaElement) {\n    const { id } = properties;\n    const { head } = document;\n    const lastMetaElement = head.querySelector<HTMLMetaElement>(Selector.lastMetaElement);\n    const attributeKeys = Object.keys(attributes);\n    const existingMetaElement = id && ((window as any)[id]\n        || selector && head.querySelector(selector)) as HTMLMetaElement;\n    const newMetaElment = !existingMetaElement && document.createElement('meta');\n    const metaElement = (existingMetaElement || newMetaElment) as HTMLMetaElement;\n\n    let dataKey: string;\n\n    if (newMetaElment) {\n        Object.assign(newMetaElment, properties);\n        Object.assign(newMetaElment.dataset, dataset);\n\n        if (lastMetaElement && lastMetaElement.nextElementSibling) {\n            head.insertBefore(\n                newMetaElment,\n                lastMetaElement.nextElementSibling\n            );\n        } else {\n            head.appendChild(newMetaElment);\n        }\n    }\n\n    attributeKeys.forEach(key => !metaElement.hasAttribute(key) && metaElement.setAttribute(dataKey, attributes[key]));\n\n    return metaElement;\n}","import {\n    regex,\n    StringConstant\n} from './types';\n\nconst { nothing } = StringConstant;\nconst { nonWord } = regex;\n\nexport default (input: string) => input\n    .split(nonWord)\n    .map((word, index) => !index && word.toLowerCase() || word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase())\n    .join(nothing);","import {\n    ILoadElementQueryCss,\n    MetaElementName,\n    StringConstant,\n    regex\n} from './types';\nimport getMetaElment from './get-meta-element';\nimport getCamelCase from './get-camel-case';\n\nconst { showRootHost } = regex;\nconst { nothing } = StringConstant;\n\nexport default function({ css, stylesheetName: currentStylesheetName = nothing, hostName = nothing }: ILoadElementQueryCss) {\n    const metaElement = getMetaElment({\n        properties: {\n            id: MetaElementName.loadElementQueryCss\n        }\n    });\n    const stylesheetName = getCamelCase(currentStylesheetName);\n    const { dataset } = metaElement;\n    const elementQueryCss = !dataset.hasOwnProperty(hostName) && (hostName && css.replace(showRootHost, hostName)) || css;\n    const { EQCSS } = self;\n\n    if (elementQueryCss && EQCSS) {\n        EQCSS.register(EQCSS.parse(elementQueryCss));\n\n        if (stylesheetName) {\n            dataset[stylesheetName] = nothing;\n        } else if (hostName) {\n            dataset[hostName] = nothing;\n        }\n    }\n}","import {\n    ILoadScript,\n    ErrorMessage,\n    LocalScriptParams,\n    LocalStylesheetScriptParams,\n    ILoadRemoteStylesheetScriptParams,\n    ILoadRemoteScriptParams,\n    ILoadJsonScriptParams,\n    LoadScriptElement,\n    LoadedScript,\n    LinkRel,\n    ScriptAttribute,\n    ScriptType\n} from './types';\nimport loadElementQueryCss from './load-element-query-css';\n\nconst { failedToLoadScript } = ErrorMessage;\nconst { stylesheet } = LinkRel;\nconst { script: scriptElement, link, style } = LoadScriptElement;\n\nexport default <P extends ILoadScript['params']>(params: P) => new Promise((resolve: (script: LoadedScript<P>) => void, reject: ILoadScript['reject']) => {\n    const { head, body } = document;\n    const { js, name: scriptName, jsonld, removeFromDom } = params as LocalScriptParams;\n    const { src } = params as ILoadRemoteScriptParams;\n    const { css, name: stylesheetName } = params as LocalStylesheetScriptParams;\n    const { href } = params as ILoadRemoteStylesheetScriptParams;\n    const { json } = params as ILoadJsonScriptParams;\n    const remoteScript = params.hasOwnProperty('src') || params.hasOwnProperty('href');\n    const element = (js || src) && scriptElement\n        || css && style\n        || href && link;\n    const selector = src && `script[src=\"${src}\"]`\n        || href && `link[href=\"${href}\"]`\n        || js && scriptName && `script[data-name=\"${scriptName}\"]`\n        || css && stylesheetName && `style[data-name=\"${stylesheetName}\"]`;\n    const existingScript = (head.querySelector(selector) || body.querySelector(selector)) as LoadedScript<P>;\n    const script = selector\n        && element\n        && document.createElement(element) as LoadedScript<P>;\n\n    if (script instanceof HTMLScriptElement) {\n        if (src) {\n            script.src = src;\n        } else if (json || js) {\n            script.innerHTML = json || js;\n            script.dataset.name = scriptName;\n\n            if (jsonld) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.jsonld);\n            } else if (json) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.json);\n            }\n        }\n    } else if (script instanceof HTMLLinkElement) {\n        script.rel = stylesheet;\n        script.href = href;\n    } else if (script instanceof HTMLStyleElement) {\n        script.innerHTML = css;\n        script.dataset.name = stylesheetName;\n\n        loadElementQueryCss({\n            css,\n            stylesheetName\n        });\n    }\n\n    if (existingScript) {\n        resolve(existingScript);\n    } else if (script) {\n        script.addEventListener('load', handleLoad);\n        script.addEventListener('error', handleLoadError);\n\n        head.appendChild(script);\n\n        if (!remoteScript) {\n            handleLoad();\n        }\n    }\n\n    function handleLoad() {\n        if (script) {\n            removeEventListeners();\n\n            if (removeFromDom) {\n                head.removeChild(script);\n            }\n\n            resolve(script);\n        }\n    }\n\n    function handleLoadError(event: Event) {\n        removeEventListeners();\n\n        console.error(event);\n\n        reject(new Error(`${failedToLoadScript}`));\n    }\n\n    function removeEventListeners() {\n        if (script) {\n            script.removeEventListener('load', handleLoad);\n            script.removeEventListener('error', handleLoadError);\n        }\n    }\n});\n","import { IDefineCustomElement, ErrorMessage } from './types';\n\nconst { unsupportedFeature, customElementAreadyDefined } = ErrorMessage;\n\nexport default function defineCustomElement({ name, constructor, ignore }: IDefineCustomElement) {\n    const { customElements } = self;\n    const define = customElements && customElements.define;\n    const existingElement = define && customElements.get && customElements.get(name);\n\n    if (define && !existingElement) {\n        customElements.define(name, constructor);\n    } else if (existingElement) {\n        throw new Error(`${customElementAreadyDefined}: ${name}`);\n    } else if (!ignore) {\n        defineCustomElement({ name, constructor, ignore: true });\n    } else {\n        throw new Error(`${unsupportedFeature}: Custom Elements - ${name}`);\n    }\n}","import { IPause } from './types';\n\nexport default ({ milliseconds = 1000 }: IPause) => new Promise((resolve, reject) => setTimeout(resolve, milliseconds));","\nimport {\n    ILoadContainerStylesheets,\n    ScriptNameSuffix,\n    StringConstant,\n    Selector\n} from './types';\nimport loadScript from './load-script'\n\nconst { dash } = StringConstant;\n\nexport default function(params: ILoadContainerStylesheets) { return new Promise((resolve: (styleElements: HTMLStyleElement[]) => void, reject) => {\n    const { requestIdleCallback } = self;\n\n    if (requestIdleCallback) {\n        requestIdleCallback(() => loadStylesheets(params, resolve));\n    } else {\n        loadStylesheets(params, resolve);\n    }\n})};\n\nasync function loadStylesheets(params: ILoadContainerStylesheets, resolve: (styleElements: HTMLStyleElement[]) => void) {\n    const { container, name } = params;\n    const styles = Array\n        .from(container.content.querySelectorAll<HTMLStyleElement>(Selector.style))\n        .map((style, index) => ({\n            name: [\n                name,\n                ScriptNameSuffix.style,\n                index++\n            ].join(dash),\n            css: style.innerHTML\n        }));\n    const stylesheets = Array\n        .from(container.content.querySelectorAll<HTMLLinkElement>(Selector.stylesheet))\n        .map((stylesheet, index) => ({\n            name: [\n                name,\n                ScriptNameSuffix.stylesheet,\n                index++\n            ].join(dash),\n            href: stylesheet.href\n        }));\n    const styleElements = await Promise.all([\n        ...styles.map(loadScript),\n        ...stylesheets.map(loadScript)\n    ]);\n\n    resolve(styleElements);\n}","import {\n    IGetElementTemplate,\n    TagName,\n    ErrorMessage\n} from './types';\nimport loadContainerStylesheets from './load-container-stylesheets';\n\nconst {\n    noElementName,\n    noTemplate,\n    noElementForSelector\n} = ErrorMessage;\n\nexport default async function (params: IGetElementTemplate) {\n    const { name, template, loadStylesheets, selector } = params;\n    const container = name && template && document.createElement(TagName.template);\n\n    let element: HTMLElement | null = null;\n\n    if (!name) {\n        throw new Error(noElementName);\n    } else if (!template) {\n        throw new Error(noTemplate);\n    }\n\n    if (container) {\n        container.innerHTML = template;\n\n        element = selector && container.content.firstElementChild && container.content.firstElementChild.querySelector(selector)\n            || container.content.firstElementChild as HTMLElement;\n\n        loadStylesheets && element && await loadContainerStylesheets({\n            ...params,\n            container\n        });\n    }\n\n    if (!element) {\n        throw new Error(noElementForSelector);\n    }\n\n    element.dataset.name = name;\n\n    return element;\n}","import {\n    IGetElementUrl,\n    TagName,\n    ErrorMessage\n} from './types';\nimport loadContainerStylesheets from './load-container-stylesheets';\n\nconst {\n    noElementName,\n    noElementSelector,\n    noTemplateUrl,\n    noTemplateForUrl,\n    noElementForSelector\n} = ErrorMessage;\n\nexport default async function (params: IGetElementUrl) {\n    const { name, url, selector, loadStylesheets } = params;\n    const { head } = document;\n    const template = name && selector && url && await fetch(url)\n        .then(response => response.text());\n    const container = template && document.createElement(TagName.template);\n\n    let element: HTMLElement | null = null;\n\n    if (!name) {\n        throw new Error(noElementName);\n    } else if (!selector) {\n        throw new Error(noElementSelector);\n    } else if (!url) {\n        throw new Error(noTemplateUrl);\n    } else if (!template) {\n        throw new Error(noTemplateForUrl);\n    }\n\n    if (container) {\n        container.innerHTML = template;\n\n        element = container.content.querySelector<HTMLElement>(selector);\n\n        loadStylesheets && element && await loadContainerStylesheets({\n            ...params,\n            container\n        });\n    }\n\n    if (!element) {\n        throw new Error(noElementForSelector);\n    }\n\n    element.setAttribute('dataset-name', name);\n\n    return element;\n}\n","import {\n    GetElementParams,\n    IGetElementTemplate,\n    IGetElementUrl\n} from './types';\nimport getElementFromTemplate from './get-element-from-template';\nimport getElementFromUrl from './get-element-from-url';\n\nexport default async function<P extends GetElementParams>(params: P) { return new Promise((resolve: (element: HTMLElement) => void, reject) => {\n    const { requestIdleCallback } = self;\n\n    if (requestIdleCallback) {\n        requestIdleCallback(() => getElement(params, resolve));\n    } else {\n        getElement(params, resolve);\n    }\n})}\n\nexport async function getElement<P extends GetElementParams> (params: P, resolve: (element: HTMLElement) => void) {\n    let element: HTMLElement;\n\n    if ((params as IGetElementUrl).url) {\n        element = await getElementFromUrl(params as IGetElementUrl);\n    } else {\n        element = await getElementFromTemplate(params as IGetElementTemplate);\n    }\n\n    resolve(element);\n}","import {\n    IGetJsonLd,\n    IJsonData,\n    JsonDataResolve\n} from './types';\nimport loadScript from './load-script';\n\nconst { parse } = JSON;\nconst dataQueue = new Map<string, Set<JsonDataResolve>>();\n\nexport default function ({ jsonLd: url }: IGetJsonLd) {return new Promise(async (resolve: JsonDataResolve, reject) => {\n    const { head } = document;\n    const script = await loadScript({\n        src: url\n    });\n    const jsonLdSelector = `script[type=\"application/ld+json\"][data-json-ld=\"${url}\"]`;\n    const jsonSelector = `script[type=\"application/json\"][data-json-ld=\"${url}\"]`;\n    const [ jsonLd, jsonScript ] = await Promise.all([\n        Array\n            .from(head.querySelectorAll<HTMLScriptElement>(jsonLdSelector))\n            .map(({ innerHTML }) => parse(innerHTML)),\n        head.querySelector<HTMLScriptElement>(jsonSelector)\n    ])\n    const json = jsonScript && parse(jsonScript.innerHTML) || {};\n    const data: IJsonData = {\n        jsonLd,\n        json\n    };\n\n    let jsonDataResolve = dataQueue.get(url);\n\n    if (jsonDataResolve) {\n        jsonDataResolve.add(resolve);\n    } else {\n        dataQueue.set(url, new Set([resolve]));\n    }\n\n    jsonDataResolve = dataQueue.get(url);\n\n    if (jsonDataResolve && jsonLd.length) {\n        Array.from(jsonDataResolve).forEach(currentResolve => {\n            currentResolve(data);\n\n            (jsonDataResolve as  Set<JsonDataResolve>).delete(currentResolve);\n        });\n\n        if (!jsonDataResolve.size) {\n            dataQueue.delete(url);\n        }\n    };\n})}","import {\n    IGetData,\n    ErrorMessage,\n    IJsonData\n} from './types';\nimport getJsonLd from './get-json-ld';\n\nconst { noJsonLdParameter } = ErrorMessage;\n\nexport default function({ jsonLd }: IGetData) { return new Promise((resolve: (data: IJsonData) => void, reject) => {\n    const { requestIdleCallback } = self;\n\n    if (jsonLd) {\n        if (requestIdleCallback) {\n            requestIdleCallback(() => getJsonLd({ jsonLd }).then(resolve));\n        } else {\n            getJsonLd({ jsonLd }).then(resolve);\n        }\n    } else {\n        reject(new Error(noJsonLdParameter));\n    }\n})}","import {\n    Environment\n} from './types';\n\nexport default function () {\n    const environment = self.hasOwnProperty('WorkerGlobalScope')\n        && Environment.worker\n        || Environment.window;\n\n    return environment;\n}","import {\n    IAnyObject,\n    IMessageAction,\n    MessageAction\n} from './types';\nconst { parse } = JSON;\n\nexport default function (event: MessageEvent): IMessageAction {\n    try {\n        const { data: message } = event;\n        const messageData: IMessageAction = typeof message === 'string' && parse(message) || message;\n\n        if (typeof messageData.params === 'string') {\n            messageData.params = parse(messageData.params);\n        }\n\n        return messageData;\n    } catch(error) {\n        return {\n            action: MessageAction.ignore,\n            params: {}\n        };\n    }\n}","import {\n    Environment\n} from './types';\n\nexport default function () {\n    const { VamtigerBrowserMethod } = self;\n    const { envrironment } = VamtigerBrowserMethod;\n    const isWindow = envrironment === Environment.window;\n\n    return isWindow;\n}","import {\n    Environment\n} from './types';\n\nexport default function () {\n    const { VamtigerBrowserMethod } = self;\n    const { envrironment } = VamtigerBrowserMethod;\n    const isWorker = envrironment === Environment.worker;\n\n    return isWorker;\n}","import {\n    sendMessageFromWorker,\n    MessageAction,\n    IRemoveRedundantScripts\n} from './types';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\n\nexport default function (params: IRemoveRedundantScripts) {\n    isWindow() && removeRedundantScripts(params);\n\n    isWorker() && sendRemoveRedundantScriptsMessage(params);\n}\n\nfunction removeRedundantScripts({ selector }: IRemoveRedundantScripts) {\n    const { head } = document;\n    const scripts = Array.from(head.querySelectorAll<HTMLScriptElement>(selector));\n\n    scripts.forEach(script => head.removeChild(script));\n}\n\nexport function sendRemoveRedundantScriptsMessage({ selector }: IRemoveRedundantScripts) {\n    const massage = {\n        action: MessageAction.removeRedundantScripts,\n        params: {\n            selector\n        }\n    };\n\n    sendMessageFromWorker(massage);\n}","import {\n    MessageAction,\n    ignore,\n    MessageResponse,\n    sendMessageFromWorker\n} from './types';\nimport getMessageData from './get-message-data';\nimport removeRedundantScripts from './remove-redundant-scripts';\nimport isWindow from './is-window';\nimport isWorker from './is-worker';\n\nconst action = {\n    [MessageAction.ignore]: ignore,\n    [MessageAction.removeRedundantScripts]: removeRedundantScripts\n}\n\nexport default async function (event: MessageEvent) {\n    const { VamtigerBrowserMethod } = self;\n    const { worker } = VamtigerBrowserMethod;\n    const { action: actionName, params } = getMessageData(event);\n    const currentAction = action[actionName] || ignore;\n    const response = currentAction(params) as MessageResponse;\n\n    if (response) {\n        isWorker && sendMessageFromWorker(response);\n\n        isWindow && worker && worker.postMessage(response);\n    }\n}","import {\n    LocalHostRelativePath\n} from './types';\nimport isLocalHost from './is-local-host';\n\nconst { vamtigerBrowserMethod: url } = LocalHostRelativePath;\n\nexport default async function() {\n    const validUrl = isLocalHost() && await fetch(url)\n        .then(response => response.ok)\n        .catch(error => '');\n    const localHostRelativeUrl = validUrl && url || '';\n\n    return localHostRelativeUrl;\n}","import {\n    HostName\n} from './types';\n\nexport default function() {\n    const { location } = window;\n    const isLocalHost = HostName.localHost === location.hostname;\n\n    return isLocalHost;\n}","import {\n    selector,\n    ScriptType,\n    LocalHostRelativePath\n} from './types';\nimport handleMessage from './handle-message';\nimport getLocalHostWorkerUrl from './get-local-host-worker-url';\n\nconst params = {\n    type: ScriptType.js\n}\n\nlet worker: Worker;\n\nexport default async function () {\n    const localHostWorkerUrl = await getLocalHostWorkerUrl();\n    const { head } = document;\n    const { createObjectURL } = URL;\n    const workerSelector = !worker && selector.worker;\n    const workerScripts = (workerSelector && Array.from(head.querySelectorAll<HTMLScriptElement>(workerSelector)) || [])\n        .map(({ innerHTML }) => innerHTML)\n        .filter(script => script);\n    const workerBlob = workerScripts && workerScripts.length && new Blob(workerScripts, params);\n    const workerUrl = workerBlob && createObjectURL && createObjectURL(workerBlob);\n    const currentWorker = workerUrl && new Worker(localHostWorkerUrl || workerUrl);\n\n    if (currentWorker) {\n        currentWorker.addEventListener('message', handleMessage);\n    }\n\n    worker = worker || currentWorker;\n\n    return worker;\n}","import {\n    Environment\n} from './types';\nimport getWorker from './get-worker';\nimport isWindow from './is-window';\n\nexport default function () {\n    isWindow() && setupWindow();\n}\n\nasync function setupWindow() {\n    const { VamtigerBrowserMethod } = self;\n\n    VamtigerBrowserMethod.worker = await getWorker();\n}","import {\n    MessageAction,\n    sendMessageFromWorker,\n    selector as Selector\n} from './types'\nimport handleMessage from './handle-message';\nimport isWorker from './is-worker';\nimport removeRedundantScripts from './remove-redundant-scripts';\n\nexport default function () {\n    isWorker() && setupWorker();\n}\n\nfunction setupWorker() {\n    addEventListener('message', handleMessage);\n\n    removeRedundantScripts({\n        selector: Selector.redundantScripts\n    });\n}","import loadScript from './load-script';\nimport loadScripts from './load-scripts';\nimport loadScriptsSequentially from './load-scripts-sequentially';\nimport loadShadowStylesheet from './load-shadow-stylesheet';\nimport defineCustomElement from './define-custom-element';\nimport pause from './pause';\nimport getElement from './get-element';\nimport getData from './get-data';\nimport getEnvironment from './get-environment';\nimport setupWindow from './setup-window';\nimport setupWorker from './setup-worker';\n\nconst envrironment = getEnvironment();\nconst vamtigerBrowserMethod = {\n    loadScript,\n    loadScripts,\n    loadScriptsSequentially,\n    loadShadowStylesheet,\n    defineCustomElement,\n    pause,\n    getElement,\n    getData,\n    getEnvironment,\n    envrironment\n};\nmain();\n\nfunction main() {\n    try {\n        const { VamtigerBrowserMethod } = self;\n\n        if (!VamtigerBrowserMethod) {\n            self.VamtigerBrowserMethod = vamtigerBrowserMethod;\n\n            setupWindow();\n\n            setupWorker();\n        }\n    } catch(error) {\n        handleError(error);\n    }\n}\n\nfunction handleError(error: Error) {\n    console.error(error);\n    throw error;\n}","import { LoadScriptsParams, LoadedScripts } from './types';\nimport loadScript from './load-script';\n\nexport default function <P extends LoadScriptsParams>(params: P) {\n    const scripts = Promise.all(params.map(loadScript)) as Promise<LoadedScripts<P>>;\n\n    return scripts\n}","import { LoadScriptsSequentiallyParams, LoadedScriptsSequentially, LoadScriptParams } from './types';\nimport loadScript from './load-script';\n\nexport default <P extends LoadScriptParams[][]>(params: P) => new Promise((resolve: (scripts: LoadedScriptsSequentially<P>) => void, reject) => {\n    let scripts = new Set();\n    let load = Promise.resolve();\n\n    params.forEach(scriptParams => {\n        load = load\n            .then(async () => await Promise.all(scriptParams.map(loadScript)))\n            .then(loadedScripts => loadedScripts.forEach(script => scripts.add(script)))\n    });\n\n    load = load.then(() => resolve(Array.from(scripts) as LoadedScriptsSequentially<P>));\n\n    return load;\n});","import {\n    ILoadShadowStylesheet,\n    Selector\n} from './types';\nimport loadElementQueryCss from './load-element-query-css';\n\nexport default function ({ css, element }: ILoadShadowStylesheet) {\n    const {\n        shadowRoot,\n        localName: hostName\n    } = element;\n    const lastStylesheet = shadowRoot && shadowRoot.querySelector(Selector.lastStylesheet);\n    const stylesheet = shadowRoot && document.createElement('style');\n\n    if (stylesheet && shadowRoot) {\n        stylesheet.innerHTML = css;\n\n        if (lastStylesheet && lastStylesheet.nextElementSibling) {\n            shadowRoot.insertBefore(stylesheet, lastStylesheet.nextElementSibling);\n        } else {\n            shadowRoot.appendChild(stylesheet);\n        }\n    }\n}"],"names":["Environment","Origin","HostName","LocalHostRelativePath","ScriptType","ScriptAttribute","DataAttribute","ErrorMessage","StringConstant","TagName","LinkRel","LoadScriptElement","Selector","MetaElementName","ScriptNameSuffix","MessageAction","regex","RegExp","dash","selector","worker","vamtigerBrowserMethod","join","comma","redundantScripts","vamtigerBrowserMethodJsonJs","vamtigerBrowserMethodJson","sendMessageFromWorker","postMessage","ignore","params","nothing","nonWord","input","split","map","word","index","toLowerCase","slice","toUpperCase","showRootHost","_a","css","_b","currentStylesheetName","_c","hostName","metaElement","properties","_d","dataset","_e","attributes","id","head","lastMetaElement","querySelector","attributeKeys","Object","keys","existingMetaElement","window","newMetaElment","document","createElement","assign","nextElementSibling","insertBefore","appendChild","forEach","key","hasAttribute","setAttribute","dataKey","getMetaElment","loadElementQueryCss","stylesheetName","getCamelCase","elementQueryCss","hasOwnProperty","replace","EQCSS","register","parse","failedToLoadScript","stylesheet","scriptElement","link","style","Promise","resolve","reject","body","js","scriptName","jsonld","removeFromDom","src","href","json","remoteScript","element","existingScript","script","handleLoad","removeEventListeners","removeChild","handleLoadError","event","console","error","Error","removeEventListener","HTMLScriptElement","innerHTML","name","type","HTMLLinkElement","rel","HTMLStyleElement","addEventListener","unsupportedFeature","customElementAreadyDefined","requestIdleCallback","loadStylesheets","container","styles","Array","from","content","querySelectorAll","stylesheets","all","loadScript","styleElements","noElementName","noTemplate","noElementForSelector","noElementSelector","noTemplateUrl","noTemplateForUrl","getElement","url","fetch","then","response","text","template","loadContainerStylesheets","getElementFromUrl","firstElementChild","getElementFromTemplate","dataQueue","Map","jsonLdSelector","jsonSelector","jsonLd","jsonScript","data","jsonDataResolve","get","add","set","Set","length","currentResolve","delete","size","noJsonLdParameter","self","isWindow","isWorker","massage","action","removeRedundantScripts","sendRemoveRedundantScriptsMessage","VamtigerBrowserMethod","message","messageData","getMessageData","actionName","currentAction","location","localHost","hostname","ok","catch","getLocalHostWorkerUrl","localHostWorkerUrl","createObjectURL","URL","workerSelector","workerScripts","filter","workerBlob","Blob","workerUrl","currentWorker","Worker","handleMessage","getWorker","setupWindow","envrironment","getEnvironment","loadScripts","loadScriptsSequentially","scripts","load","scriptParams","loadedScripts","loadShadowStylesheet","shadowRoot","lastStylesheet","defineCustomElement","constructor","customElements","define","existingElement","pause","milliseconds","setTimeout","getData","getJsonLd","setupWorker","handleError","main"],"mappings":"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"}