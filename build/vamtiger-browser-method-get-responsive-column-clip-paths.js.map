{"version":3,"file":"vamtiger-browser-method-get-responsive-column-clip-paths.js","sources":["../source/vamtiger-browser-method-get-responsive-column-clip-paths.ts"],"sourcesContent":["interface IGetResponsiveColumnClipPaths {\n    columns: number;\n    offset: number;\n}\n\ninterface IGetClipPath {\n    index: number;\n    containerWidth: number;\n    containerHeight: number;\n    columnWidth: number;\n    offset: number;\n    columns: number;\n}\n\ntry {\n    VamtigerBrowserMethod.method.getResponsiveColumnClipPaths = getResponsiveColumnClipPaths;\n} catch(error) {\n    console.warn(error);\n}\n\nexport default function getResponsiveColumnClipPaths({columns, offset}: IGetResponsiveColumnClipPaths) {\n    const containerWidth = 100;\n    const containerHeight = containerWidth;\n    const columnWidth = containerWidth/columns;\n    const clipPaths = new Array(columns)\n        .map((entry, index) => getClipPath({index, containerWidth, containerHeight, columnWidth, columns, offset}));\n\n    return clipPaths;\n}\n\nfunction getClipPath({index, containerWidth, containerHeight, columnWidth, columns, offset}: IGetClipPath) {\n    const firstColumn = !index;\n    const lastColumn = index === columns - 1;\n    const clipPath = {\n        topLeftX: firstColumn ? index\n            : (columnWidth * index) + offset,\n        topLeftY: 0,\n        topRightX: firstColumn ? columnWidth\n            : lastColumn && containerWidth || (columnWidth * (index + 1)) + offset,\n        topRightY: 0,\n        bottomRightX: firstColumn ? columnWidth - offset\n            : lastColumn && containerWidth || (columnWidth * (index + 1)) - offset,\n        bottomRightY: containerHeight,\n        bottomLeftX: firstColumn ? 0\n            :  (columnWidth * index) - offset\n    };\n\n    return clipPath;\n}"],"names":["VamtigerBrowserMethod","method","getResponsiveColumnClipPaths","error","console","warn","_a","columns","offset","columnWidth","Array","map","entry","index","containerWidth","containerHeight","firstColumn","lastColumn","topLeftX","topLeftY","topRightX","topRightY","bottomRightX","bottomRightY","bottomLeftX","getClipPath"],"mappings":"kCAcA,IACIA,sBAAsBC,OAAOC,6BAA+BA,EAC9D,MAAMC,GACJC,QAAQC,KAAKF,GAGjB,SAAwBD,EAA6BI,OAACC,YAASC,WAGrDC,EAFiB,IAEYF,EAInC,OAHkB,IAAIG,MAAMH,GACvBI,IAAI,SAACC,EAAOC,GAAU,OAK/B,SAAqBP,OAACO,UAAOC,mBAAgBC,oBAAiBN,gBAAaF,YAASC,WAC1EQ,GAAeH,EACfI,EAAaJ,IAAUN,EAAU,EAevC,OAbIW,SAAUF,EAAcH,EACjBJ,EAAcI,EAASL,EAC9BW,SAAU,EACVC,UAAWJ,EAAcP,EACnBQ,GAAcH,GAAmBL,GAAeI,EAAQ,GAAML,EACpEa,UAAW,EACXC,aAAcN,EAAcP,EAAcD,EACpCS,GAAcH,GAAmBL,GAAeI,EAAQ,GAAML,EACpEe,aAAcR,EACdS,YAAaR,EAAc,EACnBP,EAAcI,EAASL,GAnBRiB,EAAaZ,QAAOC,eAJxB,IAIwCC,gBAJxC,IAIyDN,cAAaF,UAASC"}